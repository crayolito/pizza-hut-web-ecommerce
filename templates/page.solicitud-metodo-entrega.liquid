{% layout 'none' %}

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Solicitud de Método de Entrega</title>

    <script
      defer
      src="https://maps.googleapis.com/maps/api/js?key={{settings.keyGoogleMap}}&libraries=places"
    ></script>
  </head>
  <cliente-localizacion>
    <body style="font-family: var(--fuente-principal);">
      <div class="p-sme-contenedor-base">
        <div class="p-sme-pizza-background">
          <img src="{{ 'img-aux-background-solicitud-entrega.png' | asset_url }}" alt="Logo Pizza Hut">
        </div>
        <div class="p-sme-pizza-logo">
          <img src="{{ 'logo-pizza-hut.png' | asset_url }}" alt="Logo Pizza Hut">
        </div>
        <div class="p-sme-informacion-seleccion-cliente">
          <div class="p-sme-menesajes-informacion-cliente">
            <span class="p-sme-titulo-principal">¿cómo quieres recibir tu pizza?</span>
            <p class="p-sme-texto-descripcion">
              Elige si la llevamos hasta la puerta de tu casa o si prefieres recogerla tú mismo desde nuestro local más
              cercano.
            </p>
          </div>

          <div class="p-sme-seccion-seleccion-cliente">
            <button class="p-sme-boton-recoger-local">
              <div class="p-sme-icono-recogo-local">
                {% render 'icon-recogo-local' %}
              </div>
              <div class="p-sme-texto-boton-recoger-local">
                <p class="p-sme-texto-boton-titulo">Recoger en local</p>
                <p class="p-sme-texto-boton-subtitulo">Sin costo alguno</p>
              </div>
              <div class="p-sme-icono-selecionado">
                {% render 'icon-estado-off' %}
              </div>
            </button>

            <button class="p-sme-boton-envio-domicilio">
              <div class="p-sme-icono-envio-domicilio">
                {% render 'icon-recogo-delivery' %}
              </div>
              <div class="p-sme-texto-boton-recoger-local">
                <p class="p-sme-texto-boton-titulo">Envío a domicilio</p>
                <p class="p-sme-texto-boton-subtitulo">Envio a solo Bs 2</p>
              </div>
              <div class="p-sme-icono-selecionado">
                {% render 'icon-estado-off' %}
              </div>
            </button>
          </div>
        </div>
        <div class="p-sme-opciones-cliente">
          <div class="p-sme-opciones-cliente-contenido">
            <button class="p-sme-boton-omitir">
              <p class="p-sme-texto-omitir">OMITIR</p>
              {% render 'icon-close-rojo' %}
            </button>
            <button class="p-sme-boton-siguiente">
              <p class="p-sme-texto-siguiente">Siguiente</p>
            </button>
          </div>
        </div>
        <div class="p-sme-contenido-recogida-local"></div>
        <div id="p-sme-boton-abrir-modal-mapa" class="p-sme-contenido-envio-domicilio">
          <p>Ingresa una dirección o usa tu ubicación actual</p>
          <button id="p-sme-boton-ubicacion-actual">
            {% render 'icon-gps-rojo' %}
            <p>Usar mi ubicación actual</p>
          </button>
          <div class="p-sme-decoracion-contenedor">
            <hr>
            <p>O</p>
            <hr>
          </div>
          <div class="p-sme-contenedor-input-direccion">
            {% render 'icon-location-on-negro' %}
            <input type="text" placeholder="Ingresa dirección o punto de referencia">
          </div>
        </div>
      </div>

      <!-- Modal para selección de ubicación -->
      <div class="p-sme-modal-mapa-envio-domicilio">
        <div class="p-sme-modal">
          <div class="p-sme-modal-header">
            <div class="p-sme-modal-pizza-logo">
              <img src="{{ 'logo-pizza-hut.png' | asset_url }}" alt="Logo Pizza Hut">
            </div>
            <div class="p-sme-informacion-seleccion-cliente-modal">
              <div class="p-sme-menesajes-informacion-cliente-modal">
                <span class="p-sme-titulo-principal-modal">¿cómo quieres recibir tu pizza?</span>
                <p class="p-sme-texto-descripcion-modal">
                  Elige si la llevamos hasta la puerta de tu casa o si prefieres recogerla tú mismo desde nuestro local
                  más cercano.
                </p>
              </div>
              <div class="p-sme-seccion-mensaje-modal">
                {% render 'icon-info' %}
                <p class="p-sme-texto-descripcion-modal">Seleccionar dirección en el mapa o en la lista</p>
              </div>
            </div>
          </div>
          <div class="p-sme-mapa"></div>
          <div class="p-sme-modal-footer">
            <button id="p-sme-boton-cerrar-modal" class="p-sme-boton-cerrar">
              <p>Cerrar</p>
            </button>
            <button id="p-sme-boton-confirmar-modal" class="p-sme-boton-confirmar">
              <p>Confirmar Dirección</p>
            </button>
          </div>
        </div>
      </div>
    </body>
  </cliente-localizacion>
</html>

<style>
    /* Estilos base */
    body,
    html {
      margin: 0;
      padding: 0;
      font-family: var(--fuente-principal);
    }

    /* Contenedores principales */
    .p-sme-contenedor-base {
      width: 100%;
      height: 110rem;
      position: relative;
    }

    /* Background y logo */
    .p-sme-pizza-background {
      /* SITUACION DEL ENVIO A DOMICILIO */
      top: 40.7528rem;
      /* SITUACION DEL ENVIO A DOMICILIO */
       {% comment %} display: none;  {% endcomment %}
       /* NORMAL */
       {% comment %} top: 31.9rem; {% endcomment %}
      width: 59.895rem;
      height: 37.345rem;
      left: 0rem;
      z-index: 2;
      position: absolute;
    }

    .p-sme-pizza-logo {
      width: 9.625rem;
      height: 2.3046rem;
      top: 6.4768rem;
      left: 50%;
      transform: translateX(-50%);
      z-index: 2;
      position: absolute;
    }

    .p-sme-pizza-logo img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    /* Sección de selección */
    .p-sme-informacion-seleccion-cliente {
      display: flex;
      width: 35.365rem;
      flex-direction: column;
      align-items: center;
      gap: 2.64rem;
      top: 12.2672rem;
      left: 50%;
      transform: translateX(-50%);
      z-index: 2;
      position: absolute;
    }

    .p-sme-menesajes-informacion-cliente {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 1.1rem;
      text-align: center;
    }

    /* Textos */
    .p-sme-titulo-principal {
      color: #231f20;
      text-align: center;
      font-size: 3.85rem;
      font-style: normal;
      font-weight: 400;
      line-height: 100%;
      letter-spacing: -0.077rem;
      text-transform: uppercase;
    }

    .p-sme-texto-descripcion {
      color: #231f20;
      font-size: 1rem;
      line-height: normal;
    }

    /* Botones de selección */
    .p-sme-boton-recoger-local {
      cursor: pointer;
      display: flex;
      width: 17.05rem;
      height: 3.85rem;
      padding: 0.22rem 0.88rem;
      justify-content: space-between;
      align-items: center;
      flex-shrink: 0;
      border-radius: 0.55rem;
      border: 1px solid #969696;
      background: #fff;
    }

    .p-sme-boton-envio-domicilio {
      cursor: pointer;
      display: flex;
      width: 17.05rem;
      height: 3.85rem;
      padding: 0.22rem 0.88rem;
      justify-content: space-between;
      align-items: center;
      flex-shrink: 0;
      border-radius: 0.55rem;
      border: 1px solid #969696;
      background: #fff;
    }

    .p-sme-texto-boton-titulo {
      font-size: 0.88rem;
      font-weight: 600;
    }

    .p-sme-texto-boton-subtitulo {
      color: #5a5a5a;
      font-size: 0.88rem;
      font-weight: 400;
    }

    /* Sección inferior */
    .p-sme-opciones-cliente {
      padding: 0 3.52rem;
      width: 100%;
      height: 5.06rem;
      position: sticky;
      top: 80vh;
      z-index: 100;
    }

    .p-sme-opciones-cliente-contenido {
      width: 100%;
      height: 100%;
      display: flex;
      padding: var(--XXXL, 2.64rem);
      justify-content: flex-end;
      align-items: center;
      gap: var(--XXL, 1.32rem);
      flex-shrink: 0;
      border-radius: var(--S, 0.44rem);
      border: 1px solid var(--gris-light-active, #dedede);
      background: var(--White, #fff);
    }

    .p-sme-seccion-seleccion-cliente {
      display: flex;
      width: 35rem;
      justify-content: space-between;
    }

    /* Botones de acción */
    .p-sme-boton-omitir {
      cursor: pointer;
      display: flex;
      width: 17.05rem;
      height: 2.64rem;
      padding: 1.1rem;
      justify-content: center;
      align-items: center;
      gap: 0.22rem;
      flex-shrink: 0;
      border-radius: var(--XS, 0.22rem);
      border: 1px solid var(--Pizza-Hut-Red, #c8102e);
      background: var(--White, #fff);
    }

    .p-sme-texto-omitir {
      color: #c8102e;
      font-weight: 600;
    }

    .p-sme-boton-siguiente {
      cursor: pointer;
      display: flex;
      width: 17.05rem;
      height: 2.64rem;
      padding: 1.1rem;
      justify-content: center;
      align-items: center;
      gap: 0.22rem;
      flex-shrink: 0;
      border-radius: var(--XS, 0.22rem);
      border: 0;
    }

    .p-sme-texto-siguiente {
      color: #717171;
      font-weight: 600;
    }

    /* Estilos para el contenedor principal */
  .p-sme-contenido-envio-domicilio {
      display: flex;
      width: 35.42rem;
      flex-direction: column;
      align-items: flex-start;
      gap: 1.1rem;
      position: absolute;
      top: 28.99rem;
      left: 50%;
      transform: translateX(-50%);
    }

    /* Estilos para el texto introductorio */
    .p-sme-contenido-envio-domicilio p:first-of-type {
      color: #717171;
    }

    /* Estilos para el botón de ubicación */
    .p-sme-contenido-envio-domicilio button {
      cursor: pointer;
      width: 100%;
      display: flex;
      height: 2.64rem;
      padding: 1.1rem;
      justify-content: center;
      align-items: center;
      gap: 0.22rem;
      border-radius: 0.22rem;
      border: 1px solid var(--Pizza-Hut-Red, #C8102E);
      background: var(--White, #FFF);
    }

    /* Estilos para el texto del botón */
    .p-sme-contenido-envio-domicilio button p {
      color: #C8102E;
      font-size: 0.88rem;
      font-weight: 600;
    }

    /* Estilos para el separador (O) */
    .p-sme-decoracion-contenedor {
      width: 100%;
      display: flex;
      justify-content: space-between;
      align-items: center;
      align-self: stretch;
    }

    /* Estilos para las líneas del separador */
    .p-sme-decoracion-contenedor hr {
      width: 13.75rem;
      background: #DEDEDE;
    }

    /* Estilos para el contenedor del input */
    .p-sme-contenedor-input-direccion {
      display: flex;
      height: 2.64rem;
      padding: 1.1rem;
      justify-content: center;
      align-items: center;
      gap: 0.22rem;
      align-self: stretch;
      border-radius: 0.22rem;
      border: 1px solid #717171;
      background: #FFF;
    }

    /* Estilos para el input */
    .p-sme-contenedor-input-direccion input {
      border: none;
      outline: none;
      width: 100%;
    }

    .p-sme-boton-recoger-local-activo {
      border-color: #c8102e !important;
      background: #c8102e !important;
    }

    .p-sme-icono-recogo-local.p-sme-icono-activo {
      filter: brightness(0) invert(1);
    }

    .p-sme-boton-envio-domicilio-activo {
      border-color: #c8102e !important;
      background: #c8102e !important;
    }

    .p-sme-icono-envio-domicilio.p-sme-icono-activo {
      filter: brightness(0) invert(1);
    }

    /* Modal principal */
    .p-sme-modal-mapa-envio-domicilio {
      width: 100vw;
      height: 100vh;
      position: fixed;
      top: 0;
      left: 0;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      cursor: pointer;
    }

    /* Contenedor del modal */
    .p-sme-modal {
      width: 60vw;
      height: 95vh;
      background-color: #fff;
      border-radius: 0.22rem;
      padding: 1rem;
      cursor: auto;
      position: relative;
      margin: auto;
      top: 50%;
      transform: translateY(-50%);

    }

    /* Header del modal */
    .p-sme-modal-header {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.5rem;
      width: 100%;
      height: 38%;
    }

    /* Logo de Pizza Hut */
    .p-sme-modal-pizza-logo {
      width: 8rem;
      height: 2.25rem;
    }

    .p-sme-modal-pizza-logo img {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }

    /* Información de selección del cliente */
    .p-sme-informacion-seleccion-cliente-modal {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.5rem;
      width: 40.1875rem;
    }

    /* Mensajes de información */
    .p-sme-menesajes-informacion-cliente-modal {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.5rem;
      width: 40.1875rem;
      text-align: center;
    }

    /* Título principal */
    .p-sme-titulo-principal-modal {
      font-size: 1.7rem;
      color: #231f20;
      text-align: center;
      font-style: normal;
      font-weight: 400;
      line-height: 100%;
      letter-spacing: -0.077rem;
      text-transform: uppercase;
    }

    /* Texto descriptivo */
    .p-sme-texto-descripcion-modal {
      font-size: 0.85rem !important;
    }

    /* Sección de mensaje */
    .p-sme-seccion-mensaje-modal {
      display: flex;
      width: 27.1875rem;
      height: 2.75rem;
      padding: 0rem 0.3rem 0rem 1rem;
      align-items: center;
      gap: 0.375rem;
      flex-shrink: 0;
      border-radius: var(--XS, 0.25rem);
      border-left: 4px solid #A9B5F3;
      background: #F4F7FF;
    }

    /* Sección del mapa */
    .p-sme-mapa {
      width: 100%;
      height: 54%;
    }

    /* Footer del modal */
    .p-sme-modal-footer {
      height: 10%;
      display: flex;
      justify-content: center;
      align-items: center;
      gap: var(--XXL, 1.32rem);
    }

    /* Botón cerrar */
    .p-sme-boton-cerrar {
      display: flex;
      width: 13.05rem;
      height: 1.64rem;
      padding: 1.10rem;
      justify-content: center;
      align-items: center;
      gap: 0.22rem;
      flex-shrink: 0;
      border-radius: var(--XS, 0.22rem);
      border: 1px solid var(--Pizza-Hut-Red, #C8102E);
      background: var(--White, #FFF);
    }

    .p-sme-boton-cerrar p {
      color: #C8102E;
      font-weight: 600;
      font-size: 0.77rem;
    }

    /* Botón confirmar */
    .p-sme-boton-confirmar {
      display: flex;
      width: 13.05rem;
      height: 1.64rem;
      padding: 1.10rem;
      justify-content: center;
      align-items: center;
      gap: 0.22rem;
      flex-shrink: 0;
      border-radius: var(--XS, 0.22rem);
      background: var(--gris-light-hover, #C8102E);
    }

    .p-sme-boton-confirmar p {
      color: #FFF;
      font-weight: 600;
      font-size: 0.77rem;
    }
</style>

<script>
  class ClienteLocalizacion extends HTMLElement {
    constructor() {
      super();
      this.coordenadasBase = { lat: -17.783315017953004, lng: -63.18214577296119 };
      this.pizzaLocations = [
        { lat: -17.757619, lng: -63.178738, name: 'BANZER 3ER ANILLO' },
        { lat: -17.70001, lng: -63.160219, name: 'BANZER KM 8.5' },
        { lat: -17.807739, lng: -63.204363, name: 'LAS PALMAS' },
        { lat: -17.758879, lng: -63.19948, name: 'SAN MARTIN' },
        { lat: -17.820341, lng: -63.184337, name: 'SANTOS DUMONT' },
      ];
    }

    connectedCallback() {
      // Capturar elementos
      this.botonRecogerLocal = this.querySelector('.p-sme-boton-recoger-local');
      this.botonEnvioDomicilio = this.querySelector('.p-sme-boton-envio-domicilio');
      this.botonOmitir = this.querySelector('.p-sme-boton-omitir');
      this.botonSiguiente = this.querySelector('.p-sme-boton-siguiente');
      this.contenidoRecogidaLocal = this.querySelector('.p-sme-contenido-recogida-local');
      this.contenidoEnvioDomicilio = this.querySelector('.p-sme-contenido-envio-domicilio');
      this.contenidoModal = this.querySelector('.p-sme-modal-mapa-envio-domicilio');
      this.botonCerrarModal = this.querySelector('#p-sme-boton-cerrar-modal');
      this.botonConfirmarModal = this.querySelector('#p-sme-boton-confirmar-modal');
      this.botonUbicacionActual = this.querySelector('#p-sme-boton-ubicacion-actual');
      
      // Asignar event listeners
      this.botonRecogerLocal.addEventListener('click', this.accionBotonRecogerLocal.bind(this));
      this.botonEnvioDomicilio.addEventListener('click', this.accionBotonEnvioDomicilio.bind(this));
      this.contenidoModal.addEventListener('click', (event) => {
        // Verificar si el click fue en el contenedor principal (fondo oscuro)
        if (event.target === this.contenidoModal) {
          this.cerrarModal();
        }
      });
      this.botonCerrarModal.addEventListener('click', this.cerrarModal.bind(this));
      this.botonUbicacionActual.addEventListener('click', this.mostrarModal.bind(this));

      // Inicializar contenidos ocultos
      this.contenidoRecogidaLocal.style.display = 'none';
      this.contenidoEnvioDomicilio.style.display = 'none';
      this.contenidoModal.style.display = 'none';
    }

    mostrarModal() {
      this.contenidoModal.style.display = 'block';
      // Inicializar el mapa
      this.inicializarMapa();
    }

    inicializarMapa() {
      try {
        // 1. Configurar mapa con marcador base primero
        this.contenedorMapa = this.querySelector('.p-sme-mapa');
        if (!this.contenedorMapa) {
          alert('Error: No se pudo cargar el mapa. Por favor recarga la página');
          return;
        }
    
        // Opciones del mapa simplificadas con solo control de zoom
        const opcionesMapa = {
          center: this.coordenadasBase,
          zoom: 15,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          mapTypeControl: false,  // Oculta los botones de Mapa/Satélite
          streetViewControl: false,  // Oculta el control de Street View
          fullscreenControl: false,  // Oculta el botón de pantalla completa
          zoomControl: true,  // Mantiene solo los controles de zoom
          scaleControl: false,
          rotateControl: false,
          panControl: false,
          disableDefaultUI: false
        };

        const mapa = new google.maps.Map(this.contenedorMapa, opcionesMapa);
    
        // 2. Crear marcador en posición base
        this.marcadorMovible = new google.maps.Marker({
          position: this.coordenadasBase,
          map: mapa,
          draggable: true,
          animation: google.maps.Animation.DROP
        });
    
        // 3. Configurar eventos del marcador
        this.configurarEventosMarcador(mapa);
    
        // 4. Crear y configurar botón de ubicación
        const botonUbicacion = this.crearBotonUbicacion(mapa);
    
        // 5. Pedir ubicación solo después de tener todo configurad
        this.solicitarUbicacionUsuario(mapa);
        
      } catch (error) {
        alert('Error al cargar el mapa. Por favor, recarga la página');
      }
    }
    
    solicitarUbicacionUsuario(mapa) {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (posicion) => {
            try {
              const miUbicacion = {
                lat: posicion.coords.latitude,
                lng: posicion.coords.longitude
              };
              
              // Mover marcador solo si se obtiene la ubicación
              this.marcadorMovible.setPosition(miUbicacion);
              mapa.panTo(miUbicacion);
              this.coordenadas = miUbicacion;
            } catch (error) {
              alert('Error al procesar tu ubicación');
            }
          },
          (error) => {
            // No hacer nada si hay error, mantener marcador en posición base
            console.log('Ubicación no obtenida, usando posición default');
          }
        );
      }
    }
    
    // Métodos auxiliares
    configurarEventosMarcador(mapa) {
      this.marcadorMovible.addListener('dragend', (evento) => {
        try {
          const posicion = this.marcadorMovible.getPosition();
          this.coordenadas = { lat: posicion.lat(), lng: posicion.lng() };

          console.log('Coordenadas: ', this.coordenadas); 
          mapa.panTo(posicion);
        } catch (error) {
          alert('Error al actualizar la posición');
        }
      });
    }

    cerrarModal() {
      this.contenidoModal.style.display = 'none';
    } 

    verificarLocalStorage() {
      if (localStorage.getItem('ubicacion-cliente')) {
        let ubicacionCliente = JSON.parse(localStorage.getItem('ubicacion-cliente'));
        this.coordenadasBase = ubicacionCliente;
      } else {
        this.obtenerUbicacion();
      }
    }

    obtenerUbicacion() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            this.coordenadasBase = { lat: position.coords.latitude, lng: position.coords.longitude };
            console.log('Coordenadas de Browser: ', coordenadasBase);
          },
          (error) => {
            alert('Error al obtener la ubicación: Por favor, verifique la ubicación de su dispositivo');
            console.log('Error al obtener la ubicación: ', error);
          }
        );
      }
    }

    accionBotonRecogerLocal() {
      // 1. Alternar estado principal del botón
      const estaActivo = this.botonRecogerLocal.classList.toggle('p-sme-boton-recoger-local-activo');

      // 2. Obtener elementos hijos relevantes
      const iconoPrincipal = this.botonRecogerLocal.querySelector('.p-sme-icono-recogo-local');
      const iconoEstado = this.botonRecogerLocal.querySelector('.p-sme-icono-selecionado');
      const textos = this.botonRecogerLocal.querySelectorAll('p');

      if (estaActivo) {
        // ===== MODO ACTIVADO =====
        // 2.1 Estilos para icono principal
        iconoPrincipal.classList.add('p-sme-icono-activo');

        // 2.2 Actualizar icono de estado (check)
        iconoEstado.innerHTML = `{% render 'icon-estado-on' %}`;
        iconoEstado.classList.add('p-sme-icono-activo');

        // 2.3 Cambiar color de textos a blanco
        textos.forEach((p) => (p.style.color = 'white'));
      } else {
        this.desactivarBotonRecogerLocal();
      }

      // Mostrar contenido de recogida local
      this.contenidoRecogidaLocal.style.display = 'block';
      this.contenidoEnvioDomicilio.style.display = 'none';

      // Acomodar el contenido de la pagina
      const imagenAuxiliarFondo = document.querySelector('.p-sme-pizza-background');
      {% comment %} imagenAuxiliarFondo.style. {% endcomment %}
    }

    accionBotonEnvioDomicilio() {
      // 1. Alternar estado principal del botón
      const estaActivo = this.botonEnvioDomicilio.classList.toggle('p-sme-boton-envio-domicilio-activo');

      // 2. Obtener elementos hijos relevantes
      const iconoPrincipal = this.botonEnvioDomicilio.querySelector('.p-sme-icono-envio-domicilio');
      const iconoEstado = this.botonEnvioDomicilio.querySelector('.p-sme-icono-selecionado');
      const textos = this.botonEnvioDomicilio.querySelectorAll('p');

      if (estaActivo) {
        // ===== MODO ACTIVADO =====
        // 2.1 Estilos para icono principal
        iconoPrincipal.classList.add('p-sme-icono-activo');

        // 2.2 Actualizar icono de estado (check)
        iconoEstado.innerHTML = `{% render 'icon-estado-on' %}`;
        iconoEstado.classList.add('p-sme-icono-activo');

        // 2.3 Cambiar color de textos a blanco
        textos.forEach((p) => (p.style.color = 'white'));
      } else {
        this.desactivarBotonEnvioDomicilio();
      }

      // Acomodar el contenido de la pagina
      const imagenAuxiliarFondo = document.querySelector('.p-sme-pizza-background');
      imagenAuxiliarFondo.style.top = '40.7528rem';

      // Mostrar contenido de envío a domicilio
      this.contenidoRecogidaLocal.style.display = 'none';
      this.contenidoEnvioDomicilio.style.display = 'block';

      // Desactivar contenido de recogida local
      this.desactivarBotonRecogerLocal();
    }

    desactivarBotonEnvioDomicilio() {
      const iconoPrincipal = this.botonEnvioDomicilio.querySelector('.p-sme-icono-envio-domicilio');
      const iconoEstado = this.botonEnvioDomicilio.querySelector('.p-sme-icono-selecionado');
      const textos = this.botonEnvioDomicilio.querySelectorAll('p');

      // ===== MODO DESACTIVADO =====
      // 3.1 Forzar remoción de clase principal (por si hay errores en el toggle)
      this.botonEnvioDomicilio.classList.remove('p-sme-boton-envio-domicilio-activo');

      // 3.2 Restaurar icono principal
      iconoPrincipal?.classList.remove('p-sme-icono-activo');

      // 3.3 Restaurar icono de estado (cross)
      iconoEstado.innerHTML = `{% render 'icon-estado-off' %}`;
      iconoEstado.classList.remove('p-sme-icono-activo');

      // 3.4 Restaurar color original de textos
      textos.forEach((p) => (p.style.color = ''));
    }

    desactivarBotonRecogerLocal() {
      const iconoPrincipal = this.botonRecogerLocal.querySelector('.p-sme-icono-recogo-local');
      const iconoEstado = this.botonRecogerLocal.querySelector('.p-sme-icono-selecionado');
      const textos = this.botonRecogerLocal.querySelectorAll('p');

      // ===== MODO DESACTIVADO =====
      // 3.1 Forzar remoción de clase principal (por si hay errores en el toggle)
      this.botonRecogerLocal.classList.remove('p-sme-boton-recoger-local-activo');

      // 3.2 Restaurar icono principal
      iconoPrincipal?.classList.remove('p-sme-icono-activo');

      // 3.3 Restaurar icono de estado (cross)
      iconoEstado.innerHTML = `{% render 'icon-estado-off' %}`;
      iconoEstado.classList.remove('p-sme-icono-activo');

      // 3.4 Restaurar color original de textos
      textos.forEach((p) => (p.style.color = ''));
    }
  }

  customElements.define('cliente-localizacion', ClienteLocalizacion);
</script>
