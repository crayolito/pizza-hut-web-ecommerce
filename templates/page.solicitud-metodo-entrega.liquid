{% layout 'none' %}

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Solicitud de Método de Entrega</title>

    <script
      defer
      src="https://maps.googleapis.com/maps/api/js?key={{settings.keyGoogleMap}}&libraries=places"
    ></script>
    {{ 'estilos-auxliares.css' | asset_url | stylesheet_tag }}
  </head>
  <body>
    <cliente-localizacion>
      <div class="psme-base-container">
        <!-- IMAGEN BACKGROUND CONTENEDOR BASE -->
        <div class="psme-pizza-logo-background">
          <img
            src="{{ 'img-aux-background-solicitud-entrega.png' | asset_url }}"
            alt="Pizza Background"
          >
        </div>
        <!-- CONTENIDO PRINCIPAL -->
        <section class="psme-contenido-principal">
          <div class="psme-pizza-logo">
            <img
              src="{{ 'logo-secondary-2.png' | asset_url }}"
              alt="Pizza Background"
            >
          </div>
          <div class="psme-mensaje">
            <h1 class="psme-title-primario">¿Cómo quieres recibir tu pizza?</h1>
            <p class="psme-title-secundario">
              Elige si la llevamos hasta la puerta de tu casa o si prefieres recogerla tú mismo desde nuestro local más
              cercano.
            </p>
          </div>
          <section class="psme-opciones-entrega">
            <button class="psme-opcion" id="psme-boton-recoger-local">
              <div class="psme-icono-select">
                {% render 'icon-estado-off' %}
              </div>
              <div class="psme-info-select">
                {% render 'icon-recogo-local' %}
                <div class="psme-info-select-text">
                  <p style="font-weight: 600;">Recoger en local</p>
                  <p>Sin costo alguno</p>
                </div>
              </div>
            </button>
            <button class="psme-opcion" id="psme-boton-envio-domicilio">
              <div class="psme-icono-select">
                {% render 'icon-estado-off' %}
              </div>
              <div class="psme-info-select">
                {% render 'icon-domicilio' %}
                <div class="psme-info-select-text">
                  <p style="font-weight: 600;">Envío a domicilio</p>
                  <p>Envío a solo Bs 2</p>
                </div>
              </div>
            </button>
          </section>

          <!-- SECTOR DE OPCIONES ENVIO A DOMICILIO -->
          <section class="psme-opciones-envio-domicilio">
            <p>Ingresar dirección o usar mi ubicación actual</p>
            <button id="psme-boton-ubicacion-actual" class="psme-boton-ubicacion-actual">
              {% render 'icon-location-on' %}
              <p>Usar mi ubicación actual</p>
            </button>
            <div class="psme-linea-separadora">
              <hr>
              <p>o</p>
              <hr>
            </div>
            <div class="psme-input-direccion">
              {% render 'icon-location-on-negro' %}
              <input type="text" placeholder="Ingresar dirección o punto de referencia">
            </div>
          </section>
        </section>

        <!-- SECTOR PARA ELECCION DE RECOGER EN LOCAL -->
        <section class="psme-opciones-recoger-local">
          <div class="psme-opciones-recoger-local-mensaje">
            {% render 'icon-info' %}
            <p>Selecciona en el mapa o en la lista la dirección del local de donde quieres recoger tu pedido.</p>
          </div>
          <div class="psme-recoger-local-info">
            <div class="psme-recoger-local-mapa"></div>
            <div class="psme-rl-locales">
              <div class="psme-rl-local psme-rl-local-seleccionado">
                <div class="psme-rl-titulos">
                  <h3>sANTA CRUZ</h3>
                  <h3 style="color: #C8102E;">las palmas</h3>
                </div>
                <div class="psme-rl-disponibilidad">
                  <div class="psme-rl-disponibilidad-info psme-rl-abierto ">
                    {% render 'icon-disponibilidad' %}
                    <p>ABIERTO</p>
                  </div>
                </div>
                <div class="psme-rl-info-local ">
                  <div class="psme-rl-info-local-item">
                    {% render 'icon-location-on' %}
                    <p>Doble vía a La Guardia</p>
                  </div>
                  <div class="psme-rl-info-local-item">
                    {% render 'icon-headser-mic' %}
                    <p>78452415</p>
                  </div>
                  <div class="psme-rl-info-local-item">
                    {% render 'icon-clock' %}
                    <p>Abre a las 11:00 AM</p>
                  </div>
                  <div class="psme-rl-info-servicios">
                    <div class="psme-rl-info-servicio">
                      {% render 'icon-check' %}
                      <p>Envío a domicilio</p>
                    </div>
                    <div class="psme-rl-info-servicio">
                      {% render 'icon-check' %}
                      <p>Recoger en local</p>
                    </div>
                  </div>
                </div>
                <button class="psme-rl-boton psme-rl-empezar">
                  <p>EMPEZAR MI PEDIDO</p>
                </button>
                <button class="psme-rl-boton psme-rl-ubicacion">
                  <p>Abrir ubicación en mapa</p>
                  {% render 'icon-map' %}
                </button>
              </div>
              <div class="psme-rl-local psme-rl-local-no-seleccionado">
                <div class="psme-rl-titulos">
                  <h3>sANTA CRUZ</h3>
                  <h3 style="color: #C8102E;">las palmas</h3>
                </div>
                <div class="psme-rl-disponibilidad">
                  <div class="psme-rl-disponibilidad-info psme-rl-cerrado ">
                    {% render 'icon-disponibilidad' %}
                    <p>CERRADO</p>
                  </div>
                </div>
                <div class="psme-rl-info-local ">
                  <div class="psme-rl-info-local-item">
                    {% render 'icon-location-on' %}
                    <p>Doble vía a La Guardia</p>
                  </div>
                  <div class="psme-rl-info-local-item">
                    {% render 'icon-headser-mic' %}
                    <p>78452415</p>
                  </div>
                  <div class="psme-rl-info-local-item">
                    {% render 'icon-clock' %}
                    <p>Abre a las 11:00 AM</p>
                  </div>
                  <div class="psme-rl-info-servicios">
                    <div class="psme-rl-info-servicio">
                      {% render 'icon-check' %}
                      <p>Envío a domicilio</p>
                    </div>
                    <div class="psme-rl-info-servicio">
                      {% render 'icon-check' %}
                      <p>Recoger en local</p>
                    </div>
                  </div>
                </div>
                <button class="psme-rl-boton psme-rl-empezar">
                  <p>EMPEZAR MI PEDIDO</p>
                </button>
                <button class="psme-rl-boton psme-rl-ubicacion">
                  <p>Abrir ubicación en mapa</p>
                  {% render 'icon-map' %}
                </button>
              </div>
              <div class="psme-rl-local psme-rl-local-no-seleccionado">
                <div class="psme-rl-titulos">
                  <h3>sANTA CRUZ</h3>
                  <h3 style="color: #C8102E;">las palmas</h3>
                </div>
                <div class="psme-rl-disponibilidad">
                  <div class="psme-rl-disponibilidad-info psme-rl-abierto ">
                    {% render 'icon-disponibilidad' %}
                    <p>ABIERTO</p>
                  </div>
                </div>
                <div class="psme-rl-info-local ">
                  <div class="psme-rl-info-local-item">
                    {% render 'icon-location-on' %}
                    <p>Doble vía a La Guardia</p>
                  </div>
                  <div class="psme-rl-info-local-item">
                    {% render 'icon-headser-mic' %}
                    <p>78452415</p>
                  </div>
                  <div class="psme-rl-info-local-item">
                    {% render 'icon-clock' %}
                    <p>Abre a las 11:00 AM</p>
                  </div>
                  <div class="psme-rl-info-servicios">
                    <div class="psme-rl-info-servicio">
                      {% render 'icon-check' %}
                      <p>Envío a domicilio</p>
                    </div>
                    <div class="psme-rl-info-servicio">
                      {% render 'icon-check' %}
                      <p>Recoger en local</p>
                    </div>
                  </div>
                </div>
                <button class="psme-rl-boton psme-rl-empezar">
                  <p>EMPEZAR MI PEDIDO</p>
                </button>
                <button class="psme-rl-boton psme-rl-ubicacion">
                  <p>Abrir ubicación en mapa</p>
                  {% render 'icon-map' %}
                </button>
              </div>
            </div>
          </div>
        </section>

        <!-- OPCIONES DE SELECCIÓN -->
        <section class="psme-opciones">
          <button class="psme-boton-siguiente" id="psme-boton-siguiente">
            <p>Siguiente</p>
          </button>
          <button class="psme-boton-omitir" id="p-sme-boton-omitir">
            <p>Omitir</p>
            {% render 'icon-close-rojo' %}
          </button>
        </section>
      </div>

      <section class="psme-container"></section>

      <!-- MODAL DE UBICACIÓN ENVÍO A DOMICILIO -->
      <section class="psme-modal-mapa-envio-domicilio">
        <div class="psme-modal-contenedor-base">
          <div class="psme-modal-header">
            <div class="psme-modal-mensaje">
              {% render 'icon-info' %}
              <p>Si es necesario, cambia la ubicación del pin en el mapa.</p>
            </div>
            <button class="psme-modal-boton-cerrar" id="psme-boton-cerrar-modal">
              {% render 'icon-close-rojo' %}
            </button>
          </div>
          <div class="psme-modal-body"></div>
          <div class="psme-modal-footer">
            <button class="psme-modal-boton-confirmar" id="p-sme-boton-confirmar-modal">
              <p>Confirmar</p>
            </button>
            <button class="psme-modal-boton-cancelar" id="p-sme-boton-cancelar-modal">
              <p>Cerrar</p>
            </button>
          </div>
        </div>
      </section>
    </cliente-localizacion>
  </body>
</html>

<script>
  class ClienteLocalizacion extends HTMLElement {
    constructor() {
      super();
      this.coordenadasBase = { lat: -17.783315017953004, lng: -63.18214577296119 };
      this.pizzaLocations = [
        { lat: -17.757619, lng: -63.178738, name: 'BANZER 3ER ANILLO' },
        { lat: -17.70001, lng: -63.160219, name: 'BANZER KM 8.5' },
        { lat: -17.807739, lng: -63.204363, name: 'LAS PALMAS' },
        { lat: -17.758879, lng: -63.19948, name: 'SAN MARTIN' },
        { lat: -17.820341, lng: -63.184337, name: 'SANTOS DUMONT' },
      ];
    }

    connectedCallback() {
      // CAPTURA DE ELEMENTOS
      // IMAGEN BACKGROUND DEL CONTENEDOR PRINCIPAL
      this.imagenBackground = this.querySelector('.psme-pizza-logo-background');
      // SELECTORES DE OPCIONES DE OBTENER SU PRODUCTO
      this.botonOpcionRecogerLocal = this.querySelector('#psme-boton-recoger-local');
      this.botonOpcionEnvioDomicilio = this.querySelector('#psme-boton-envio-domicilio');
      // SELECTORES DE OPCIONES DEL CLIENTE
      this.contenedorOpcionesUsuario = this.querySelector('.psme-opciones');
      this.botonSiguienteOpcion = this.querySelector('#psme-boton-siguiente');
      this.botonOmitirOpcion = this.querySelector('#p-sme-boton-omitir');
      // SECTOR ELEMENTO OPCIONES ENVIO A DOMICILIO
      this.contenedorOpcionesEnvioDomicilio = this.querySelector('.psme-opciones-envio-domicilio');
      this.botonUsarMiUbicacionActual = this.querySelector('#psme-boton-ubicacion-actual');
      // SECTOR ELEMENTO OPCIONES RECIBIR EN LOCAL
      this.contenedorOpcionesRecogerLocal = this.querySelector('.psme-opciones-recoger-local');
      // SELECTORES DE ELEMENTOS SOBRE EL MODAL
      this.contenidoModal = this.querySelector('.psme-modal-mapa-envio-domicilio');
      // ELEMENTOS DEL MODAL DE ENVIO A DOMICILIO
      this.contenedorMapaModal = this.querySelector('.psme-modal-body');
      this.contenedorTotalModal = this.querySelector('.psme-modal-mapa-envio-domicilio');
      this.botonCerrarModal = this.querySelector('#p-sme-boton-cancelar-modal');
      this.botonIconoCerrarModal = this.querySelector('#psme-boton-cerrar-modal');

      // Asignar event listeners
      this.botonOpcionRecogerLocal.addEventListener('click', this.accionBotonRecogerLocal.bind(this));
      this.botonOpcionEnvioDomicilio.addEventListener('click', this.accionBotonEnvioDomicilio.bind(this));
      this.botonUsarMiUbicacionActual.addEventListener('click', this.accionUbicacionActualEnvioDomicilio.bind(this));
      this.botonCerrarModal.addEventListener('click', this.cerrarModal.bind(this));
      this.botonIconoCerrarModal.addEventListener('click', this.cerrarModal.bind(this));
      this.contenidoModal.addEventListener('click', (event) => {
        // Verificar si el click fue en el contenedor principal (fondo oscuroo)
        if (event.target === this.contenidoModal) {
          this.cerrarModal();
        }
      });

      // Inicializar contenidos ocultoss
      this.contenedorOpcionesRecogerLocal.style.display = 'none';
      this.contenedorOpcionesEnvioDomicilio.style.display = 'none';
      this.contenedorTotalModal.style.visibility = 'hidden';
    }

    {% comment %} mostrarModal() {
      this.contenidoModal.style.visibility = 'visible';
      this.inicializarMapa();
    }

    inicializarMapa() {
      try {
        // 1. Configurar mapa con marcador base primero
        this.contenedorMapa = this.querySelector('.p-sme-mapa');
        if (!this.contenedorMapa) {
          alert('Error: No se pudo cargar el mapa. Por favor recarga la página');
          return;
        }

        // Opciones del mapa simplificadas con solo control de zoom
        const opcionesMapa = {
          center: this.coordenadasBase,
          zoom: 15,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          mapTypeControl: false, // Oculta los botones de Mapa/Satélite
          streetViewControl: false, // Oculta el control de Street View
          fullscreenControl: false, // Oculta el botón de pantalla completa
          zoomControl: true, // Mantiene solo los controles de zoom
          scaleControl: false,
          rotateControl: false,
          panControl: false,
          disableDefaultUI: false,
        };

        const mapa = new google.maps.Map(this.contenedorMapa, opcionesMapa);

        // 2. Crear marcador en posición base
        this.marcadorMovible = new google.maps.Marker({
          position: this.coordenadasBase,
          map: mapa,
          draggable: true,
          animation: google.maps.Animation.DROP,
        });

        // 3. Configurar eventos del marcador
        this.configurarEventosMarcador(mapa);

        // 5. Pedir ubicación solo después de tener todo configurad
        this.solicitarUbicacionUsuario(mapa);
      } catch (error) {
        alert('Error al cargar el mapa. Por favor, recarga la página');
        console.log('Error al cargar el mapa: ', error);
      }
    }

    solicitarUbicacionUsuario(mapa) {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (posicion) => {
            try {
              const miUbicacion = {
                lat: posicion.coords.latitude,
                lng: posicion.coords.longitude,
              };

              // Mover marcador solo si se obtiene la ubicación
              this.marcadorMovible.setPosition(miUbicacion);
              mapa.panTo(miUbicacion);
              this.coordenadas = miUbicacion;
            } catch (error) {
              alert('Error al procesar tu ubicación');
            }
          },
          (error) => {
            // No hacer nada si hay error, mantener marcador en posición base
            console.log('Ubicación no obtenida, usando posición default');
          }
        );
      }
    }

    // Métodos auxiliares
    configurarEventosMarcador(mapa) {
      this.marcadorMovible.addListener('dragend', (evento) => {
        try {
          const posicion = this.marcadorMovible.getPosition();
          this.coordenadas = { lat: posicion.lat(), lng: posicion.lng() };

          console.log('Coordenadas: ', this.coordenadas);
          mapa.panTo(posicion);
        } catch (error) {
          alert('Error al actualizar la posición');
        }
      });
    }

    verificarLocalStorage() {
      if (localStorage.getItem('ubicacion-cliente')) {
        let ubicacionCliente = JSON.parse(localStorage.getItem('ubicacion-cliente'));
        this.coordenadasBase = ubicacionCliente;
      } else {
        this.obtenerUbicacion();
      }
    }

    obtenerUbicacion() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            this.coordenadasBase = { lat: position.coords.latitude, lng: position.coords.longitude };
            console.log('Coordenadas de Browser: ', coordenadasBase);
          },
          (error) => {
            alert('Error al obtener la ubicación: Por favor, verifique la ubicación de su dispositivo');
            console.log('Error al obtener la ubicación: ', error);
          }
        );
      }
    } {% endcomment %}

    inicializarMapaRecogerLocal() {}

    inicializarMapaEnvioDomicilio() {
      // 1. Crear el mapa
      if (!this.contenedorMapaModal) {
        alert('Error: No se pudo cargar el mapa. Por favor recarga la página');
        return;
      }

      const configuracionMapa = new google.maps.Map(this.contenedorMapaModal, {
        center: this.coordenadasBase,
        zoom: 16,
        mapTypeControl: false,  
        streetViewControl: false, 
        fullscreenControl: false,   
        zoomControl: true,  
        scaleControl: false,
        rotateControl: false,
        panControl: false,
        disableDefaultUI: false,
      });

      const mapa = new google.maps.Map(this.contenedorMapaModal, configuracionMapa);
      
      // 2. Crear el marcador movible 
      const marcadorMovible = new google.maps.Marker({
        position: this.coordenadasBase,
        map: mapa,
        draggable: true,
        animation: google.maps.Animation.DROP,
      });

      // 3. Configurar el evento del marcador
      marcadorMovible.addListener('dragend', (evento) => {
        try{
          const posicion = this.marcadorMovible.getPosition();
          this.coordenadas = { lat: posicion.lat(), lng: posicion.lng() };

          console.log('Coordenadas: ', this.coordenadas);
          mapa.panTo(posicion);
        } catch {
          alert('Error al actualizar la posición');
        }
      });

      // 4. Pedir la ubicacion del usuario y actualizar el marcador a esa posicion
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
             try{
              const miUbicacion = {
                lat: position.coords.latitude,
                lng: position.coords.longitude,
              };

              marcadorMovible.setPosition(miUbicacion);
              mapa.panTo(miUbicacion);
              this.coordenadas = miUbicacion;
            }catch{
              alert('Error al obtener la ubicación: Por favor, verifique la ubicación de su dispositivo');
              console.log('Error al obtener la ubicación 1: ', error);
            }
          },
          (error) => {
            alert('Error al obtener la ubicación: Por favor, verifique la ubicación de su dispositivo');
            console.log('Error al obtener la ubicación 2: ', error);
          }
        );
      }
    }

    crearElementosSeleccionLocal() {}

    actualizarElementosSeleccionLocal() {}

    cerrarModal() {
      this.contenedorOpcionesUsuario.style.removeProperty('display');
      this.contenedorTotalModal.style.visibility = 'hidden';
    }

    accionUbicacionActualEnvioDomicilio() {
      this.contenedorOpcionesUsuario.style.display = 'none';
      this.contenedorTotalModal.style.visibility = 'visible';
      // Activar el mapa dentro del modal
      this.inicializarMapaEnvioDomicilio();
    }

    accionBotonRecogerLocal() {
      // 1. Cambiar estado visual del botón y obtener elementos clave
      const estaActivo = this.botonOpcionRecogerLocal.classList.toggle('psme-opcion-seleccionado');
      const iconoEstado = this.botonOpcionRecogerLocal.querySelector('.psme-icono-select');
      const imagenBackground = this.imagenBackground;

      if (estaActivo) {
        console.log('Entra a activar modo recogida en local test 1');

        // === MODO ACTIVACIÓN ===
        iconoEstado.innerHTML = `{% render 'icon-estado-on' %}`;

        // Ajustar interfaz para modo recogida en local:
        this.imagenBackground.style.visibility = 'hidden';
        this.contenedorOpcionesRecogerLocal.style.removeProperty('display');
        this.botonSiguienteOpcion.style.display = 'none';
      } else {
        // === MODO DESACTIVACIÓN ===
        this.desactivarBotonRecogerLocal();

        // Revertir cambios de interfaz:
        this.imagenBackground.style.removeProperty('visibility');
        this.contenedorOpcionesRecogerLocal.style.display = 'none';
        this.botonSiguienteOpcion.style.removeProperty('display');
      }

      // Desactivar modo envío a domicilio si está activo
      if (this.botonOpcionEnvioDomicilio.classList.contains('psme-opcion-seleccionado')) {
        this.botonSiguienteOpcion.style.display = 'none';
        {% comment %} this.botonSiguienteOpcion.style.removeProperty('display'); {% endcomment %}
        this.contenedorOpcionesEnvioDomicilio.style.display = 'none';
        this.desactivarBotonEnvioDomicilio();
      }

      // Inicializar mapa para el modo de recogida en local
      this.inicializarMapaRecogerLocal();
      // Crear elementos de seleccion de local
      this.crearElementosSeleccionLocal();
    }

    accionBotonEnvioDomicilio() {
      // 1. Cambiar estado visual del botón y obtener elementos clave
      const estaActivo = this.botonOpcionEnvioDomicilio.classList.toggle('psme-opcion-seleccionado');
      const iconoEstado = this.botonOpcionEnvioDomicilio.querySelector('.psme-icono-select');
      const imagenBackground = this.imagenBackground;

      if (estaActivo) {
        // === MODO ACTIVACIÓN ===
        iconoEstado.innerHTML = `{% render 'icon-estado-on' %}`;

        // Ajustar interfaz para modo envío a domicilio:
        this.imagenBackground.style.visibility = 'hidden';
        this.contenedorOpcionesEnvioDomicilio.style.removeProperty('display');
      } else {
        // === MODO DESACTIVACIÓN ===
        this.desactivarBotonEnvioDomicilio();

        // Revertir cambios de interfaz:
        this.imagenBackground.style.removeProperty('visibility');
        this.contenedorOpcionesEnvioDomicilio.style.display = 'none';
      }

      // Desactivar el modo de recoger en local si está activo
      if (this.botonOpcionRecogerLocal.classList.contains('psme-opcion-seleccionado')) {
        this.botonSiguienteOpcion.style.removeProperty('display');
        this.contenedorOpcionesRecogerLocal.style.display = 'none';
        this.desactivarBotonRecogerLocal();
      }
    }

    desactivarBotonEnvioDomicilio() {
      this.botonOpcionEnvioDomicilio.classList.remove('psme-opcion-seleccionado');
      const iconoEstado = this.botonOpcionEnvioDomicilio.querySelector('.psme-icono-select');
      iconoEstado.innerHTML = `{% render 'icon-estado-off' %}`;
    }

    desactivarBotonRecogerLocal() {
      this.botonOpcionRecogerLocal.classList.remove('psme-opcion-seleccionado');
      const iconoEstado = this.botonOpcionRecogerLocal.querySelector('.psme-icono-select');
      iconoEstado.innerHTML = `{% render 'icon-estado-off' %}`;
    }
  }

  customElements.define('cliente-localizacion', ClienteLocalizacion);
</script>

{% comment %}
  TAREAS PARA TERMINAR
  - Activar el modal en el envio a domicilio
    - Hacer mapa del modal con el Usar mi ubicacion actual
    - Hacer el input se direccion dinamica
  - Activar el mapa en el recoger local
    - Hacer la creacion dinamica elementos de seleccion de local
    - Ordenar locales por distancia (coordenadas) default - cliente
    - Hacer marcadores dinamicos que click recoordenen la lista de locales
    - Hacer que la lista que la lista haga el mapa dinamico
    - Seleccion de local y peticion de datos del local (todos los locales - o uno en especifico)
{% endcomment %}
]
