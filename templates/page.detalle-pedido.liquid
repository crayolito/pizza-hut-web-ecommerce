<!-- Hoja de estiloss css -->
{{ 'estilos-generales.css' | asset_url | stylesheet_tag }}
{{ 'page-detalle-pedido.css' | asset_url | stylesheet_tag }}

<detalle-pedido>
  <div class="container-main-smecph">
    <section class="container-sub-simple-smecph" id="etapa-1-detalle-pedido">
      <div class="pdpph-imagen-etapa1">
        <img src="{{ 'imagen-check-verde.png' | asset_url }}" alt="Icono de exito" width="100%" height="100%">
      </div>
      <small>¡pedido confirmado! en breve estarás disfrutando</small>
      <div class="pdpph-mensaje-etapa1">
        <div class="pdpph-mensaje-etapa1-icono icon-color-secondary">
          {% render 'icon-recogo-local' %}
        </div>
        <h1 class="color-letras-primary">EN LOCAL</h1>
      </div>
      <div class="pdpph-info-etapa1 color-letras-extra">
        <h3>Nº de pedido 235246</h3>
        <h3>ESTARA LISTO A las 13:30</h3>
        <h3>fecha 23 de feb. 2025</h3>
      </div>
      <hr>
    </section>
    <section class="container-sub-simple-smecph" id="etapa-2-detalle-pedido">
      <small style="width: 100%;">DETALLE DEL PEDIDO</small>
      <div class="container-sub-simple-smecph-row">
        <div class="pdpph-etapa2-mensaje">
          <p>#235246</p>
          <div class="pdpph-etapa2-mensaje2 color-letras-extra">
            <p>1 COMBO</p>
            <p>•</p>
            <p>Pedido realizado: 13 de febrero de 2025 Hora: 13:00 P.M.</p>
          </div>
        </div>
        <h3 style="white-space: nowrap;" class="color-letras-primary">55.00 Bs</h3>
      </div>
    </section>
    <section class="container-sub-simple-smecph pdpph-general" id="detalle-general-pedido">
      <div
        id="pdpph-tracking-pedido"
        class="pdpph-general-pedido pdpph-extra-general"
      ></div>
    </section>
    <section class="container-sub-simple-smecph phpdp-extra" id="etapa-2-info-compra">
      <h4>PEDIDO EN LOCAL</h4>
      <div class="container-sub-simple-smecph-column" id="pdpph-etapa2-info-local">
        <h3 class="color-letras-primary">BANZER 3RE ANILLO</h3>
        <div class="pdpph-etapa2-info-local">
          {% render 'icon-location-on' %}
          <p>Av. 6 de Agosto 1234, La Paz, Bolivia</p>
        </div>
        <div class="pdpph-etapa2-info-local">
          {% render 'icon-headser-mic' %}
          <p>+591 7 222 222 22</p>
        </div>
        <button
          id="phpdp-btn-abrir-mapa"
          class="ph-btn-secundario icon-color-primary"
        >
          <p>ABRIR UBICACION EN MAPA</p>
          {% render 'icon-map' %}
        </button>
      </div>
      <h4>METODO DE PAGO</h4>
      <div class="pdpph-etapa2-metodo-pago icon-color-extra" id="pdpph-etapa2-metodo-pago">
        {% render 'icon-dolar' %}
        <p class="color-letras-extra">Efectivo contra entrega</p>
      </div>
      <h4>TU PEDIDO(1)</h4>
      <div class="container-sub-smecph">
        <div class="pdpph-etapa2-info-pedido">
          <p>COMBO LA CONDICIONAL</p>
          <p class="color-letras-extra">Cantidad: 1</p>
        </div>
        <p style="font-weight: 700;" class="color-letras-primary">55.00 Bs</p>
      </div>
      <div class="container-sub-smecph">
        <div class="pdpph-etapa2-info-pedido">
          <p>COMBO LA CONDICIONAL</p>
          <p class="color-letras-extra">Cantidad: 1</p>
        </div>
        <p style="font-weight: 700;" class="color-letras-primary">55.00 Bs</p>
      </div>
      <div class="pdpph-detalle-precios">
        <div class="pdpph-detalle-precios-item">
          <p>Subtotal</p>
          <p>55.00 Bs</p>
        </div>
        <div class="pdpph-detalle-precios-item">
          <p>Entrega</p>
          <p>10.00 Bs</p>
        </div>
        <div class="pdpph-detalle-precios-item">
          <p>Descuento</p>
          <p>0.00 Bs</p>
        </div>
        <hr>
        <div class="pdpph-detalle-precios-item">
          <p>Total</p>
          <p>65.00 Bs</p>
        </div>
      </div>
      <div class="container-sub-simple-smecph-column pdpph-extra-mobile">
        <h4>NOTA DE ENVIO</h4>
        <p style="text-align: start;">
          Por favor, agregar extra queso en la pizza y asegurarse de que la masa sea pan pizza. Entregar sin tocar el
          timbre, solo llamar al celular al llegar. Gracias.
        </p>
      </div>
    </section>
    <section class="ph-opciones-mobile-footer" id="phpdp-opciones">
      <button
        id="phpdp-btn-ver-mas-detalles"
        class="ph-btn-secundario"
      >
        <p>VER MAS DETALLES</p>
      </button>
      <button
        id="phpdp-btn-volver-inicio"
        class="ph-btn-primario icon-color-primary"
      >
        {% render 'icon-volver-atras' %}
        <p>VOLVER ATRAS</p>
      </button>
    </section>
  </div>

  <!-- MODAL SNIPPER DE CARGANDO -->
  <section
    id="phpdp-modal-snipper"
    class="ph-background-container-modal"
  >
    <div
      id="phpep-modal-snipper-body"
      class="ph-modal-main-snipper"
    >
      <div class="ph-modal-body-snipper">
        <div class="snipper-container">
          <div class="snipper-background">
            <img
              src="{{ 'fondoSnipper.png' | asset_url }}"
              alt="Fondo de Snipper"
              width="100%"
              height="100%"
            >
          </div>
          <div class="snipper-logo">
            <img
              src="{{ 'logoSnipper.png' | asset_url }}"
              alt="Logo de Snipper"
              width="100%"
              height="100%"
            >
          </div>
        </div>
      </div>
      <p>Procesando informacion ...</p>
    </div>
  </section>
</detalle-pedido>

<script>
  class DetallePedido extends HTMLElement {
    constructor() {
      super();
      this.coordenadas = { lat: -17.510420897741643, lng: -63.16459000457593 };
      this.direccionSeleccionada = false;
      this.marcadorMovible = null;
    }

    connectedCallback() {
      // REFERENCIAS A ELEMENTOS
      this.modalSnipper = this.querySelector('#phpdp-modal-snipper');
      this.detalleGeneralPedido = this.querySelector('#detalle-general-pedido');
      this.contenedorTrackingPedido = this.querySelector('#pdpph-tracking-pedido');
      this.detallaPedidof1 = this.querySelector('#etapa-1-detalle-pedido');
      this.detallaPedidof2 = this.querySelector('#etapa-2-detalle-pedido');
      this.infoCompraF2 = this.querySelector('#etapa-2-info-compra');
      this.btnVerMasDetalles = this.querySelector('#phpdp-btn-ver-mas-detalles');
      this.btnVolverInicio = this.querySelector('#phpdp-btn-volver-inicio');
      this.btnAbrirUbicacionLocal = this.querySelector('#phpdp-btn-abrir-mapa');

      // EVENTOS INICIALIZAR
      this.btnVolverInicio.addEventListener('click', this.volverAtras.bind(this));
      this.btnVerMasDetalles.addEventListener('click', this.verMasDetalles.bind(this));
      this.btnAbrirUbicacionLocal.addEventListener('click', this.abrirUbicacionLocal.bind(this));

      // INICIALIZA ELEMENTO Y PROCESOS (CLAVEES)
      this.modalSnipper.style.display = 'none';
      this.detalleGeneralPedido.style.display = 'none';
      this.contenedorTrackingPedido.style.display = 'none';
      this.detallaPedidof1.style.display = 'none';
      this.detallaPedidof2.style.display = 'none';
      this.infoCompraF2.style.display = 'none';
      this.btnVolverInicio.style.display = 'none';
      this.btnVerMasDetalles.style.display = 'none';

      this.inicializarDataLocalStorage();
      this.inicializarObjetoGoogleMaps(0);
    }

    inicializarDataLocalStorage() {
      {% comment %} localStorage.setItem('ph-estadoDP', 'etapa-1'); {% endcomment %}
      const estadoDetallePedido = localStorage.getItem('ph-estadoDP');
      const origenHistorial = localStorage.getItem('ph-origenHistorial');
      

      {% comment %} if (estadoDetallePedido == null) {
        window.location.href = '/';
      } {% endcomment %}

      if (estadoDetallePedido == 'etapa-1') {
        this.detallaPedidof1.style.display = 'flex';
        this.btnVerMasDetalles.style.display = 'flex';
        this.btnVolverInicio.style.display = 'flex';
        this.btnVolverInicio.style.display = 'flex';
        this.detalleGeneralPedido.style.display = 'flex';
        this.contenedorTrackingPedido.style.display = 'flex';
      }

      if (estadoDetallePedido == 'etapa-2') {
        this.detallaPedidof2.style.display = 'flex';
        this.infoCompraF2.style.display = 'flex';
        this.btnVolverInicio.style.display = 'flex';
        this.detalleGeneralPedido.style.display = 'flex';
        this.contenedorTrackingPedido.style.display = 'flex';
      }
    }

    inicializarObjetoGoogleMaps(intentos = 0) {
      // Verificar si Google Maps esta cargado
      if (typeof google == 'undefined') {
        this.modalSnipper.style.display = 'flex';
        if (intentos < 10) {
          console.log('Google Maps no está cargado, esperando... Intento ' + (intentos + 1));
          setTimeout(() => {
            this.inicializarObjetoGoogleMaps(intentos + 1);
          }, 500); // Esperar 0.5 segundos antes de volver a intentar
        } else {
          console.error('Google Maps no se cargó después de varios intentos');
        }
        return;
      }

      this.modalSnipper.style.display = 'none';
      console.log('Google Maps cargado correctamente');
      this.inicializarMapaTest();
    }

    inicializarMapaTest() {
      // 1. Crear el mapa
      if (!this.detalleGeneralPedido && !this.contenedorTrackingPedido) {
        alert('Error: No se pudo cargar el mapa. Por favor recarga la página');
        return;
      }

      const configuracionMapa = {
        center: this.coordenadas,
        zoom: 16,
        mapTypeControl: false,
        streetViewControl: false,
        fullscreenControl: false,
        zoomControl: true,
        scaleControl: false,
        rotateControl: false,
        panControl: false,
        disableDefaultUI: false,
      };

      const mapa = new google.maps.Map(this.contenedorTrackingPedido, configuracionMapa);

      // 2. Crear el marcador movible
      {% comment %} const marcadorMovible = new google.maps.Marker({ {% endcomment %}
      this.marcadorMovible = new google.maps.Marker({
        position: this.coordenadas,
        map: mapa,
        draggable: true,
        animation: google.maps.Animation.DROP,
      });

       // 3. Configurar el evento del marcador
       this.marcadorMovible.addListener('dragend', (evento) => {
         try {
           const posicion = this.marcadorMovible.getPosition();
           this.coordenadas = { lat: posicion.lat(), lng: posicion.lng() };

           console.log('Coordenadas: ', this.coordenadas);
           mapa.panTo(posicion);
         } catch {
           alert('Error al actualizar la posición');
           console.error(error);
         }
       });

        // 4. Pedir la ubicacion del usuario y actualizar el marcador a esa posicion
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            try {
              const miUbicacion = {
                lat: position.coords.latitude,
                lng: position.coords.longitude,
              };

              this.marcadorMovible.setPosition(miUbicacion);
              mapa.panTo(miUbicacion);
              this.coordenadas = miUbicacion;
            } catch (error) {
              alert('Error al obtener la ubicación: Por favor, verifique la ubicación de su dispositivo');
              console.log('Error al obtener la ubicación 1: ', error);
            }
          },
          (error) => {
            alert('Error al obtener la ubicación: Por favor, verifique la ubicación de su dispositivo');
            console.log('Error al obtener la ubicación 2: ', error);
          }
        );
      }
    }

    volverAtras(){
      const vinoHistorial = localStorage.getItem('ph-origenHistorial');
      if(vinoHistorial == 'true'){
        localStorage.removeItem('ph-estadoDP');
        localStorage.removeItem('ph-origenHistorial');
        window.history.back();
      }else {
        localStorage.setItem('ph-estadoDP', 'etapa-1');
        this.inicializarDataLocalStorage();
      }
    }

    verMasDetalles(){
      localStorage.setItem('ph-estadoDP', 'etapa-2');
      this.inicializarDataLocalStorage();
    }

    abrirUbicacionLocal(){
      window.open(`https://www.google.com/maps/search/?api=1&query=${this.coordenadas.lat},${this.coordenadas.lng}`, '_blank');
    }
  }
  customElements.define('detalle-pedido', DetallePedido);
</script>
