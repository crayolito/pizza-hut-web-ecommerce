<!-- Hojas de estilos css -->
{{ 'estilos-generales.css' | asset_url | stylesheet_tag }}
{{ 'page-checkout.css' | asset_url | stylesheet_tag }}

<!-- Script de Facebook -->
<script
  async
  defer
  crossorigin="anonymous"
  src="https://connect.facebook.net/es_ES/sdk.js#xfbml=1&version=v15.0&appId=657863972925266"
></script>

<!-- Script de Google -->
<script src="https://accounts.google.com/gsi/client" async defer></script>

<inicio-sesion>
  <div class="container-main-smecph container-base">
    <div class="container-sub-simple-smecph">
      <small>INICIAR SESION</small>
      <div class="ph-mcci-input">
        <p>Numero de celular</p>
        <div class="ph-container-input">
          <div class="ph-container-mensaje">
            {% render 'icon-boliviana' %}
            <p>+591</p>
            {% render 'icon-flecha-abajo' %}
          </div>
          <input
            id="phpis-input"
            type="tel"
            placeholder="Numero de celular"
            autocomplete="off"
            maxlength="8"
            oninput="this.value=this.value.replace(/[^0-9]/g,'')"
            pattern="[0-9]{1,8}"
          >
        </div>
      </div>
      <p class="color-letras-extra">
        Al iniciar sesión, aceptas nuestras Políticas de privacidad y Términos y condiciones
      </p>
      <button
        id="phpis-btn-iniciar-sesion"
        class="ph-btn-general desactivado"
      >
        <p>Iniciar sesión con teléfono</p>
      </button>
      {% comment %} id="phpis-btn-google" {% endcomment %}
      {% comment %}
        {% render 'icon-google' %}
        <p>Continuar con Google</p>
      {% endcomment %}
      <button class="ph-btn-secundario">
        <!-- FACEBOOK LOGIN - MÍNIMO NECESARIO -->
        <div id="fb-root"></div>
        <div
          class="fb-login-button"
          data-width="300"
          data-size="large"
          data-button-type="continue_with"
          data-scope="public_profile,email"
        ></div>
      </button>
      {% comment %}
        id="phpis-btn-facebook"
        {% render 'icon-facebook-custom' %}
        <p>Continuar con Facebook</p>
      {% endcomment %}
      <button class="ph-btn-secundario">
        <div
          id="g_id_onload"
          data-client_id="658161391897-43e6il3h9ugg7vmecsmstrc8fbl0esmg.apps.googleusercontent.com"
          data-callback="handleGoogleLogin"
        ></div>

        <div
          class="g_id_signin"
          data-type="standard"
          data-size="large"
          data-width="300"
        ></div>
      </button>
      <div class="pccph-modal-separador">
        <div class="pccph-modal-separador-linea"></div>
        <p class="color-letras-extra">¿No puedes iniciar sesión?</p>
        <div class="pccph-modal-separador-linea"></div>
      </div>
      <section class="ph-opciones-mobile-footer">
        <a
          href="/pages/crear-cuenta"
          class="ph-btn-primario"
        >
          <p>CREAR CUENTA</p>
        </a>
      </section>
    </div>

    <section
      id="phpis-container-modal"
      class="ph-background-container-modal"
    >
      <!-- 1re MODAL : SNIPPER DE CARGANDO -->
      <div
        id="phpis-snipper-modal"
        class="ph-modal-main-snipper"
      >
        <div class="ph-modal-body-snipper">
          <div class="snipper-container">
            <div class="snipper-background">
              <img
                src="{{ 'fondoSnipper.png' | asset_url }}"
                alt="Fondo de Snipper"
                width="100%"
                height="100%"
              >
            </div>
            <div class="snipper-logo">
              <img
                src="{{ 'logoSnipper.png' | asset_url }}"
                alt="Logo de Snipper"
                width="100%"
                height="100%"
              >
            </div>
          </div>
        </div>
        <p>Procesando informacion ...</p>
      </div>
      <!-- 2do MODAL : MENSAJES DE RESPUESTA -->
      <div
        id="phpis-mensaje-proceso"
        class="ph-modal-main-mensajes"
      >
        <!-- 3er MODAL : EXITO -->
        <div
          id="phpis-mp-exito"
          class="ph-modal-body-exito"
        >
          <img src="{{ 'imagen-check-verde.png' | asset_url }}" alt="Icono de exito" width="100%" height="100%">
          <small>Tu cuenta está activa. ¡ya puedes pedir tu pizza favorita!</small>
          <button class="ph-btn-general icon-color-primary">
            {% render 'icon-cerrar-sesion' %}
            <p>INICIAR SESION</p>
          </button>
        </div>
        <!-- 4to MODAL : VERIFICAR TU NUMERO -->
        <div
          id="phpis-mp-verificar-numero"
          class="ph-modal-body-verificar-numero"
        >
          <h1>VERIFICA TU NUMERO</h1>
          <p
            id="phpis-mensaje-verificar-numero"
            class="color-letras-extra"
          ></p>
          <div class="pccph-container-inputs">
            <input
              autocomplete="off"
              class="pcch-item-input"
              type="number"
              id="single-digit1"
              min="0"
              max="9"
              maxlength="1"
              oninput="this.value=this.value.replace(/[^0-9]/g,''); if(this.value.length > 1) this.value = this.value.slice(0,1);"
            >
            <input
              autocomplete="off"
              class="pcch-item-input"
              type="number"
              id="single-digit2"
              min="0"
              max="9"
              maxlength="1"
              oninput="this.value=this.value.replace(/[^0-9]/g,''); if(this.value.length > 1) this.value = this.value.slice(0,1);"
            >
            <input
              autocomplete="off"
              class="pcch-item-input"
              type="number"
              id="single-digit3"
              min="0"
              max="9"
              maxlength="1"
              oninput="this.value=this.value.replace(/[^0-9]/g,''); if(this.value.length > 1) this.value = this.value.slice(0,1);"
            >
            <input
              autocomplete="off"
              class="pcch-item-input"
              type="number"
              id="single-digit4"
              min="0"
              max="9"
              maxlength="1"
              oninput="this.value=this.value.replace(/[^0-9]/g,''); if(this.value.length > 1) this.value = this.value.slice(0,1);"
            >
          </div>
          <button class="ph-btn-secundario">
            <p>Reenviar código</p>
          </button>
          <div class="pccph-modal-separador">
            <div class="pccph-modal-separador-linea"></div>
            <p>¿No puedes iniciar sesión?</p>
            <div class="pccph-modal-separador-linea"></div>
          </div>
          <a
            href="/pages/crear-cuenta"
            class="ph-btn-primario"
          >
            <p>CREAR CUENTA</p>
          </a>
        </div>
      </div>
    </section>
  </div>
</inicio-sesion>

<script>
  class InicioSesion extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      // CAPTURAR ELEMENTOS
      this.input = this.querySelector('#phpis-input');
      this.mensajeVerificarNumero = this.querySelector('#phpis-mensaje-verificar-numero');
      this.btnIniciarSesion = this.querySelector('#phpis-btn-iniciar-sesion');
      {% comment %} this.btnGoogle = this.querySelector('#phpis-btn-google');
      this.btnFacebook = this.querySelector('#phpis-btn-facebook'); {% endcomment %}
      this.containerGeneral = this.querySelector('#phpis-container-modal');
      this.containerSnipper = this.querySelector('#phpis-snipper-modal');
      this.containerMensaje = this.querySelector('#phpis-mensaje-proceso');
      this.containerExito = this.querySelector('#phpis-mp-exito');
      this.containerVerificarNumero = this.querySelector('#phpis-mp-verificar-numero');
      this.input1Verificacion = this.querySelector('#single-digit1');
      this.input2Verificacion = this.querySelector('#single-digit2');
      this.input3Verificacion = this.querySelector('#single-digit3');
      this.input4Verificacion = this.querySelector('#single-digit4');

      // EVENTOS LISTENERS
      this.input.addEventListener('input', this.verificarInput.bind(this));
      this.input1Verificacion.addEventListener('input', this.verificarNumero.bind(this));
      this.input2Verificacion.addEventListener('input', this.verificarNumero.bind(this));
      this.input3Verificacion.addEventListener('input', this.verificarNumero.bind(this));
      this.input4Verificacion.addEventListener('input', this.verificarNumero.bind(this));
      this.btnIniciarSesion.addEventListener('click', this.iniciarSesion.bind(this));
      {% comment %} this.btnGoogle.addEventListener('click', this.iniciarSesionGoogle.bind(this));
      this.btnFacebook.addEventListener('click', this.iniciarSesionFacebook.bind(this)); {% endcomment %}

      // INICIALIZAR ELEMENTOS
      this.reiniciarProceso();
      this.ocultarElementosBase();
    }

    disconnectedCallback() {
      // Eliminar todos los event listeners para evitar memory leaks
      this.input.removeEventListener('input', this.verificarInput);
      this.input1Verificacion.removeEventListener('input', this.verificarNumero);
      this.input2Verificacion.removeEventListener('input', this.verificarNumero);
      this.input3Verificacion.removeEventListener('input', this.verificarNumero);
      this.input4Verificacion.removeEventListener('input', this.verificarNumero);
      this.btnIniciarSesion.removeEventListener('click', this.iniciarSesion);
      {% comment %} this.btnGoogle.removeEventListener('click', this.iniciarSesionGoogle);
      this.btnFacebook.removeEventListener('click', this.iniciarSesionFacebook); {% endcomment %}

      // Si añadiste los botones de cancelar o volver
      if (this.btnVolver) {
        this.btnVolver.removeEventListener('click', this.reiniciarProceso);
      }

      if (this.btnCancelarVerificacion) {
        this.btnCancelarVerificacion.removeEventListener('click', this.reiniciarProceso);
      }

      // Eliminar listeners globales
      document.removeEventListener('keydown', this.handleKeyDown);
      this.containerGeneral.removeEventListener('click', this.cerrarModal);
      document.removeEventListener('click', this.detectarParaCerrarModal);

      // Limpiar cualquier timeout pendiente
      if (this.timeoutSesion) {
        clearTimeout(this.timeoutSesion);
      }

      // Limpiar otras referencias
      console.log('Componente InicioSesion desmontado y limpiado');
    }

    verificarInput() {
      if (this.input.value.length == 8) {
        this.btnIniciarSesion.classList.remove('desactivado');
      } else {
        this.btnIniciarSesion.classList.add('desactivado');
      }
    }

    iniciarSesion() {
      if (this.input.value.length !== 8) {
        return;
      }

      // Ingresar el valor dentro del this.mensajeVerificarNumero
      this.mensajeVerificarNumero.innerHTML = `
      Enviamos un código de verificación de 4 dígitos al número *****${this.input.value.slice(
        -3
      )}, que expira en 5 minutos. Copia ese
            código y pégalo a continuación:`;

      this.containerGeneral.style.display = 'flex';
      this.containerSnipper.style.display = 'flex';

      // Simular un proceso de carga
      setTimeout(() => {
        this.containerMensaje.style.display = 'flex';
        this.containerSnipper.style.display = 'none';
        this.containerVerificarNumero.style.display = 'flex';
      }, 3000);
    }

    iniciarSesionGoogle() {
      // Lógica para iniciar sesión con Google
      console.log('Iniciar sesión con Google');
      this.containerGeneral.style.display = 'flex';
      this.containerSnipper.style.display = 'flex';

      setTimeout(() => {
        this.containerMensaje.style.display = 'none';
        this.containerSnipper.style.display = 'none';
        localStorage.setItem(
          'ph-datos-usuario',
          JSON.stringify({
            nombre: '----',
            celular: this.input.value,
            apellido: '----',
            email: '----',
            ci: '----',
          })
        );
        window.location.href = '/';
      }, 3000);
    }

    iniciarSesionFacebook() {
      // Lógica para iniciar sesión con Facebook
      console.log('Iniciar sesión con Facebook');
      this.containerGeneral.style.display = 'flex';
      this.containerSnipper.style.display = 'flex';

      setTimeout(() => {
        this.containerMensaje.style.display = 'none';
        this.containerSnipper.style.display = 'none';
        localStorage.setItem(
          'ph-datos-usuario',
          JSON.stringify({
            nombre: '----',
            celular: this.input.value || '----',
            apellido: '----',
            email: '----',
            ci: '----',
          })
        );
        window.location.href = '/pages/perfil';
      }, 3000);
    }

    verificarNumero(event) {
      const inputs = [
        this.input1Verificacion,
        this.input2Verificacion,
        this.input3Verificacion,
        this.input4Verificacion,
      ];

      // Obtener el elemento de entrada actual que desencadenó el evento
      const inputActual = event.target;

      // Encontrar el índice del input actual en nuestro array
      const indiceActual = inputs.indexOf(inputActual);

      // Si el input actual tiene un valor y hay un siguiente input, enfócalo
      if (inputActual.value.length === 1 && indiceActual < inputs.length - 1) {
        inputs[indiceActual + 1].focus();
      }

      // Verificar si todos los inputs están llenos
      const todosLlenos = inputs.every((input) => input.value.length === 1);

      if (todosLlenos) {
        // Aquí puedes agregar la lógica para enviar el código de verificación
        console.log('Código de verificación enviado');
        this.containerVerificarNumero.style.display = 'none';
        this.containerMensaje.style.display = 'none';
        this.containerSnipper.style.display = 'flex';

        setTimeout(() => {
          this.ocultarElementosBase();
          localStorage.setItem(
            'ph-datos-usuario',
            JSON.stringify({
              nombre: '----',
              celular: this.input.value || '----',
              apellido: '----',
              email: '----',
              ci: '----',
            })
          );
          window.location.href = '/';
        }, 3000);
      }
    }

    ocultarElementosBase() {
      this.containerGeneral.style.display = 'none';
      this.containerSnipper.style.display = 'none';
      this.containerMensaje.style.display = 'none';
      this.containerExito.style.display = 'none';
      this.containerVerificarNumero.style.display = 'none';
    }

    reiniciarProceso() {
      // Ocultar todos los contenedores activos
      this.ocultarElementosBase();

      // Limpiar los campos de entrada
      this.input.value = '';
      this.input1Verificacion.value = '';
      this.input2Verificacion.value = '';
      this.input3Verificacion.value = '';
      this.input4Verificacion.value = '';

      // Desactivar el botón de inicio de sesión
      this.btnIniciarSesion.classList.add('desactivado');

      // Mostrar solo la interfaz inicial (ajustar según tu diseño)
      // Si tienes un contenedor principal que debe estar visible, actívalo aquí
      // Por ejemplo: this.containerPrincipal.style.display = 'block';

      console.log('Proceso reiniciado');
    }
  }

  customElements.define('inicio-sesion', InicioSesion);

  // Funcion para procesar el login de Google
  function handleGoogleLogin(responde) {
    console.log('Login con Google:', responde);
  }

  // Funcion para cargar el SDK de Facebook de manera segura
  function loadFacebookSDK() {
    // Carga asincrona del SDK de Facebook
    (function (d, s, id) {
      var js,
        fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) {
        return;
      }
      js = d.createElement(s);
      js.id = id;
      js.src = 'https://connect.facebook.net/en_US/sdk.js';
      js.onload = function () {
        // Inicializar SDK cuando se haya cargado
        window.fbAsyncInit();
      };
      fjs.parentNode.insertBefore(js, fjs);
    })(document, 'script', 'facebook-jssdk');
  }

  // Inicializar Facebook SDK
  window.fbAsyncInit = function () {
    // Solo inicializar si FB esta definido
    if (typeof FB !== 'undefined') {
      FB.init({
        appId: '657863972925266',
        cookie: true,
        xfbml: true,
        version: 'v15.0',
      });

      // Escuchar eventos de login
      FB.Event.subscribe('auth.login', function (response) {
        console.log('Login con Facebook exitoso');
        console.log(response);
        // Aquí puedes añadir el código para manejar la respuesta
      });
    } else {
      console.log('El SDK de Facebook no está disponible');
    }
  };

  // Cargar Facebook SDK cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', function () {
    loadFacebookSDK();
  });
</script>

{% style %}
  .pccph-container-inputs {
    width: 100%;
    display: flex;
    justify-content: space-between;
    gap: 0.25rem;
  }

  .pcch-item-input {
    flex-basis: 25%;
    height: 5.88rem;
    border-radius: var(--espaciado-s);
    padding: 0.62rem 1.25rem;
    font-size: 4.375rem;
    font-style: normal;
    font-weight: 400;
    line-height: 100%;
    letter-spacing: -0.0875rem;
    text-transform: uppercase;
    background: var(--Gris-Light, #f5f5f5);
  }

  .pccph-modal-separador {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--espaciado-l);
  }

  .pccph-modal-separador-linea {
    /* width: 100%; */
    flex-grow: 1;
    height: 1px;
    background-color: #dedede;
  }
{% endstyle %}
