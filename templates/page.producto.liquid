<!-- Hoja de estilos css -->
{{ 'estilos-generales.css' | asset_url | stylesheet_tag }}
{{ 'page.producto.css' | asset_url | stylesheet_tag }}

<ph-producto>
  <div class="container-base pmph-container">
    <div class="pmph-imagen compleja">
      <!-- IMAGE PRODUCTO SIMPLE -->
      {% comment %}
        <img
          id="phmp-contenido-ver-producto-simple"
          class="phmp-img-simple"
          src="{{ 'imagen-pizza-1.png' | asset_url }}"
          alt="Pizza 1"
          width="100%"
          height="100%"
        >
      {% endcomment %}
      <!-- IMAGE PRODUCTO COMPLEJO -->
      {% comment %}
        <div
          id="phmp-contenido-ver-producto-complejo"
          class="phmp-img-compleja"
        >
          <!-- BORDE DE PIZZA -->
          <img
            class="phmp-borde-pizza-img"
            src="{{ 'pizza-borde.png' | asset_url }}"
            alt="Pizza 1"
            width="100%"
            height="100%"
          >
          <!-- SEPARADOS DE MITAD DE PIZZA -->
          <img
            class="phmp-separador-pizza-img"
            src="{{ 'separador-mitad-pizza.png' | asset_url }}"
            alt="Pizza 1"
            width="100%"
            height="100%"
          >
          <!-- SECCION BOTONES PARA TIPO DE MITADD -->
          <div class="phmp-detalle-imagen-compleja-botones">
            <button
              lado-pizza-btn="izquierda"
              id="phpm-btn-complejo-izq"
              class="phmp-pizza-seleccion-mitad "
            >
              <p>LADO IZQUIERDO</p>
              <div class="phmp-psm-icon">
                {% render 'icon-volver-atras' %}
              </div>
            </button>
            <button
              lado-pizza-btn="derecha"
              id="phpm-btn-complejo-der"
              class="phmp-pizza-seleccion-mitad"
            >
              <p>LADO DERECHO</p>
              <div class="phmp-psm-icon">
                {% render 'icon-flecha-derecha' %}
              </div>
            </button>
          </div>
          <!-- SECCION MITADES DE PIZZA -->
          <div class="phmp-imagenes-mitades">
            <div id="phpm-producto-complejo-img-izq" class="phmp-mitad-izquierda">
              <img src="{{ 'imagen-mitad-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div id="phpm-producto-complejo-img-der" class="phmp-mitad-derecha">
              <img src="{{ 'imagen-mitad-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
          </div>
        </div>
      {% endcomment %}
    </div>
    <div class="pmph-detalle-producto">
      <div class="pmph-header">
        {% comment %}
          <button class="pmph-volver-atras icon-color-primary ">
            {% render 'icon-volver-atras' %}
            <p class="color-letras-primary">Volver</p>
          </button>
          <small>Choclo y Tocino</small>
          <p>Salsa de tomate, queso mozarella, Choclo y tocino</p>
        {% endcomment %}
      </div>
      <div class="pmph-seleccion">
        {% comment %}
          <div class="pmph-seleccion-normal pmph-cantidad">
            <h3>Cantidad</h3>
            <cantidad-input>
              <div
                origen-trabajo="producto"
                min="0"
                max="10"
                id="producto-id"
                handle="producto-handle"
                class="pmph-cantidad-selector"
              >
                <button
                  accion="decrementar"
                  class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                >
                  {% render 'icon-basura' %}
                </button>
                <button
                  accion="decrementar"
                  class="pmph-cantidad-selector-button  elemento-oculto icon-color-tertiary"
                >
                  {% render 'icon-menos' %}
                </button>
                <p>0</p>
                <button
                  accion="incrementar"
                  class="pmph-cantidad-selector-button icon-color-tertiary"
                >
                  {% render 'icon-mas' %}
                </button>
              </div>
            </cantidad-input>
          </div>
          <div id="pmph-seleccion-n1" class="pmph-seleccion-normal ">
            <h3>Tamaño</h3>
            <button id="pmp-item-n1" class="pmp-item-simple">
              <div class="pmp-item-simple-info">
                <h3>Personal</h3>
                <p>para 1 persona</p>
              </div>
              <div class="pmp-item-simple-escoger">
                {% render 'icon-estado-off' %}
              </div>
            </button>
            <button id="pmp-item-n1" class="pmp-item-simple desactivado">
              <div class="pmp-item-simple-info seleccionado">
                <h3>Mediana</h3>
                <p>para 3 personas + Bs. 18</p>
              </div>
              <div class="pmp-item-simple-escoger">
                {% comment %} {% render 'icon-estado-on-plus' %} {% endcomment %}
                {% render 'icon-estado-off' %}
              </div>
            </button>
            <button id="pmp-item-n1" class="pmp-item-simple desactivado">
              <div class="pmp-item-simple-info">
                <h3>Grande</h3>
                <p>para 4 personas + Bs. 61</p>
              </div>
              <div class="pmp-item-simple-escoger">
                {% render 'icon-estado-off' %}
              </div>
            </button>
            <button id="pmp-item-n1" class="pmp-item-simple ">
              <div class="pmp-item-simple-info seleccionado">
                <h3>Familiar</h3>
                <p>para 5 personas + Bs. 87</p>
              </div>
              <div class="pmp-item-simple-escoger">
                {% render 'icon-estado-off' %}
              </div>
            </button>
          </div>
          <div id="pmph-seleccion-n2" class="pmph-seleccion-especial ">
            <h3>Masa y Borde</h3>
            <button id="pmp-item-n2" class="pmp-item-complejo">
              <div class="pmp-item-complejo-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-complejo-info">
                <p>PAN PIZZA</p>
                <div class="pmp-item-simple-escoger">
                  {% render 'icon-estado-off' %}
                </div>
              </div>
            </button>
            <button id="pmp-item-n2" class="pmp-item-complejo ">
              <div class="pmp-item-complejo-imagen seleccionado">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-complejo-info seleccionado">
                <p>CRISPY: DELGADA Y CRUJIENTE</p>
                <div class="pmp-item-simple-escoger">
                  {% render 'icon-estado-off' %}
                </div>
              </div>
            </button>
            <button id="pmp-item-n2" class="pmp-item-complejo">
              <div class="pmp-item-complejo-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-complejo-info">
                <p>PAN PIZZA</p>
                <div class="pmp-item-simple-escoger">
                  {% render 'icon-estado-off' %}
                </div>
              </div>
            </button>
            <button id="pmp-item-n2" class="pmp-item-complejo desactivado">
              <div class="pmp-item-complejo-imagen seleccionado">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-complejo-info seleccionado">
                <p>PAN PIZZA</p>
                <div class="pmp-item-simple-escoger">
                  {% render 'icon-estado-off' %}
                </div>
              </div>
            </button>
          </div>
          <div id="pmph-seleccion-n3" class="pmph-seleccion-especial">
            <h3>Extras</h3>
            <button id="pmp-item-n3" class="pmp-item-complejo desactivado">
              <div class="pmp-item-complejo-imagen ">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-complejo-info">
                <div class="pmp-item-complejo-info-detalle ">
                  <p>Piña</p>
                  <p>+Bs 7</p>
                </div>
                <div class="pmp-item-simple-escoger">
                  {% render 'icon-checkbox-off' %}
                </div>
              </div>
            </button>
            <button id="pmp-item-n3" class="pmp-item-complejo ">
              <div class="pmp-item-complejo-imagen seleccionado">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-complejo-info">
                <div class="pmp-item-complejo-info-detalle seleccionado">
                  <p>Salsa de Tomate</p>
                  <p>+Bs 7</p>
                </div>
                <div class="pmp-item-simple-escoger">
                  {% render 'icon-checkbox-off' %}
                </div>
              </div>
            </button>
            <button id="pmp-item-n3" class="pmp-item-complejo desactivado">
              <div class="pmp-item-complejo-imagen ">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-complejo-info">
                <div class="pmp-item-complejo-info-detalle ">
                  <p>Pepperoni</p>
                  <p>+Bs 7</p>
                </div>
                <div class="pmp-item-simple-escoger">
                  {% render 'icon-checkbox-off' %}
                </div>
              </div>
            </button>
            <button id="pmp-item-n3" class="pmp-item-complejo ">
              <div class="pmp-item-complejo-imagen seleccionado">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-complejo-info">
                <div class="pmp-item-complejo-info-detalle seleccionado">
                  <p>Aceitunas</p>
                  <p>+Bs 7</p>
                </div>
                <div class="pmp-item-simple-escoger">
                  {% render 'icon-checkbox-off' %}
                </div>
              </div>
            </button>
          </div>
        {% endcomment %}
        <div id="pmph-seleccion-pizza-mitadymitad" class="pmph-seleccion-normal ">
          <h3>UN SABOR PARA CADA MITAD</h3>
          <div
            lado-pizza="izquierda"
            id="phpm-item-pizzamitadymitad"
            class="pmph-extras "
          >
            <div class="pmph-extras-detalle">
              <p class="phpm-mensaje-primario-pizzamitadymitad">CHOCLO Y PIÑA</p>
              <p>LADO IZQUIERDA</p>
            </div>
            <button class="pmph-extras-button">
              {% render 'icon-flecha-izquierda' %}
            </button>
          </div>
          <div
            lado-pizza="derecha"
            id="phpm-item-pizzamitadymitad"
            class="pmph-extras "
          >
            <div class="pmph-extras-detalle">
              <p class="phpm-mensaje-primario-pizzamitadymitad">CHOCLO Y PIÑA</p>
              <p>LADO IZQUIERDA</p>
            </div>
            <button class="pmph-extras-button ">
              {% render 'icon-flecha-izquierda' %}
            </button>
          </div>
        </div>
        <div id="pmph-seleccion-extras-n1" class="pmph-seleccion-basico">
          <div class="pmph-extras-header">
            <h3>Postres</h3>
            <button
              id="phpm-btn-anadir-extras-n1"
              class="pmph-extras-button icon-color-primary"
            >
              {% render 'icon-mas' %}
              <p>Añadir</p>
            </button>
          </div>
          <!-- CUANDO NO HAY SELECCIONADO UN EXTRA -->
          <div id="phpm-vacio-extras-especiales-n1" class="pmph-extras">
            <p>SELECcIONAR POSTRE</p>
            <button class="pmph-extras-button icon-color-tertiary ">
              {% render 'icon-flecha-izquierda' %}
            </button>
          </div>
          <!-- CUANDO HAY SELECCIONADO UN EXTRA -->
          <div id="phpm-extras-especiales-n1" class="pmp-items-extras-seleccionados">
            <div id="pmp-item-extra" class="pmp-item-extra-seleccionado">
              <div class="pmp-item-extra-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-extra-info">
                <div class="pmp-item-extra-detalle">
                  <p>x1</p>
                  <p>MOUSE MARACUYA</p>
                  <p>12 Bs</p>
                </div>
                <button class="pmp-item-extra-delete icon-color-primary">
                  {% render 'icon-basura' %}
                </button>
              </div>
            </div>
            <div id="pmp-item-extra" class="pmp-item-extra-seleccionado">
              <div class="pmp-item-extra-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-extra-info">
                <div class="pmp-item-extra-detalle">
                  <p>x5</p>
                  <p>TARTALETA DE LIMON</p>
                  <p>22 Bs</p>
                </div>
                <button class="pmp-item-extra-delete icon-color-primary">
                  {% render 'icon-basura' %}
                </button>
              </div>
            </div>
          </div>
        </div>
        <div id="pmph-seleccion-extras-n2" class="pmph-seleccion-basico">
          <div class="pmph-extras-header">
            <h3>Gaseosas y cervezas</h3>
            <button
              id="phpm-btn-anadir-extras-n2"
              class="pmph-extras-button icon-color-primary"
            >
              {% render 'icon-mas' %}
              <p>Añadir</p>
            </button>
          </div>
          <!-- CUANDO NO HAY SELECCIONADO UN EXTRA -->
          <div id="phpm-vacio-extras-especiales-n2" class="pmph-extras">
            <p>SELECcIONAR</p>
            <button class="pmph-extras-button icon-color-tertiary ">
              {% render 'icon-flecha-izquierda' %}
            </button>
          </div>
          <!-- CUANDO HAY SELECCIONADO UN EXTRA -->
          <div id="phpm-extras-especiales-n2" class="pmp-items-extras-seleccionados">
            <div id="pmp-item-extra" class="pmp-item-extra-seleccionado">
              <div class="pmp-item-extra-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-extra-info">
                <div class="pmp-item-extra-detalle">
                  <p>x1</p>
                  <p>Sprite 2lt</p>
                  <p>22 Bs</p>
                </div>
                <button class="pmp-item-extra-delete icon-color-primary">
                  {% render 'icon-basura' %}
                </button>
              </div>
            </div>
            <div id="pmp-item-extra" class="pmp-item-extra-seleccionado">
              <div class="pmp-item-extra-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div class="pmp-item-extra-info">
                <div class="pmp-item-extra-detalle">
                  <p>x1</p>
                  <p>Sprite 2lt</p>
                  <p>22 Bs</p>
                </div>
                <button class="pmp-item-extra-delete icon-color-primary">
                  {% render 'icon-basura' %}
                </button>
              </div>
            </div>
          </div>
        </div>
        <section class="ph-opciones-mobile-footer">
          <button
            id="phpm-btn-haz-un-pedido"
            class="ph-btn-general"
          >
            {% render 'icon-tarjeta-credito' %}
            <p>
              HAZ UN PEDIDO <br>
              BS 50.00
            </p>
          </button>
          <button
            id="phpm-btn-agregar-carrito"
            class="ph-btn-general"
          >
            {% render 'icon-carrito' %}
            <p>
              AGREGAR CARRITO <br>
              BS 116.00
            </p>
          </button>
        </section>
      </div>
    </div>
    <!-- MODAL INFORMACION EXTRAAA -->
    <div
      id="pmph-modal-productos-extras"
      class="pmph-modal-general"
    >
      <div class="pmph-modal-informacion-extras">
        {% comment %}
          <div id="phpp-modal-productos-postres" class="ppme-modal-informacion-extras-body">
            <small class="phpp-modal-extras-titulo">POSTRES</small>
            <div class="ppme-modal-items-extras">
              <div class="ppme-modal-item-extra">
                <div class="ppme-modal-item-extra-imagen">
                  <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
                </div>
                <div class="ppme-modal-item-extra-info">
                  <div class="ppme-modal-item-extra-info-detalle">
                    <p>Pan de Pizza</p>
                    <p>10 Bs</p>
                  </div>
                  <cantidad-input>
                    <div
                      origen-trabajo="producto"
                      min="0"
                      max="10"
                      id="producto-id"
                      handle="producto-handle"
                      class="ppme-modal-item-extra-cantidad"
                    >
                      <button
                        accion="decrementar"
                        class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                      >
                        {% render 'icon-basura' %}
                      </button>
                      <button
                        accion="decrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-menos' %}
                      </button>
                      <p>0</p>
                      <button
                        accion="incrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-mas' %}
                      </button>
                    </div>
                  </cantidad-input>
                </div>
              </div>
              <div class="ppme-modal-item-extra">
                <div class="ppme-modal-item-extra-imagen">
                  <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
                </div>
                <div class="ppme-modal-item-extra-info">
                  <div class="ppme-modal-item-extra-info-detalle">
                    <p>Pan de Pizza</p>
                    <p>10 Bs</p>
                  </div>
                  <cantidad-input>
                    <div
                      origen-trabajo="producto"
                      min="0"
                      max="10"
                      id="producto-id"
                      handle="producto-handle"
                      class="ppme-modal-item-extra-cantidad"
                    >
                      <button
                        accion="decrementar"
                        class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                      >
                        {% render 'icon-basura' %}
                      </button>
                      <button
                        accion="decrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-menos' %}
                      </button>
                      <p>0</p>
                      <button
                        accion="incrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-mas' %}
                      </button>
                    </div>
                  </cantidad-input>
                </div>
              </div>
              <div class="ppme-modal-item-extra">
                <div class="ppme-modal-item-extra-imagen">
                  <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
                </div>
                <div class="ppme-modal-item-extra-info">
                  <div class="ppme-modal-item-extra-info-detalle">
                    <p>Pan de Pizza</p>
                    <p>10 Bs</p>
                  </div>
                  <cantidad-input>
                    <div
                      origen-trabajo="producto"
                      min="0"
                      max="10"
                      id="producto-id"
                      handle="producto-handle"
                      class="ppme-modal-item-extra-cantidad"
                    >
                      <button
                        accion="decrementar"
                        class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                      >
                        {% render 'icon-basura' %}
                      </button>
                      <button
                        accion="decrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-menos' %}
                      </button>
                      <p>0</p>
                      <button
                        accion="incrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-mas' %}
                      </button>
                    </div>
                  </cantidad-input>
                </div>
              </div>
              <div class="ppme-modal-item-extra">
                <div class="ppme-modal-item-extra-imagen">
                  <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
                </div>
                <div class="ppme-modal-item-extra-info">
                  <div class="ppme-modal-item-extra-info-detalle">
                    <p>Pan de Pizza</p>
                    <p>10 Bs</p>
                  </div>
                  <cantidad-input>
                    <div
                      origen-trabajo="producto"
                      min="0"
                      max="10"
                      id="producto-id"
                      handle="producto-handle"
                      class="ppme-modal-item-extra-cantidad"
                    >
                      <button
                        accion="decrementar"
                        class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                      >
                        {% render 'icon-basura' %}
                      </button>
                      <button
                        accion="decrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-menos' %}
                      </button>
                      <p>0</p>
                      <button
                        accion="incrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-mas' %}
                      </button>
                    </div>
                  </cantidad-input>
                </div>
              </div>
              <div class="ppme-modal-item-extra">
                <div class="ppme-modal-item-extra-imagen">
                  <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
                </div>
                <div class="ppme-modal-item-extra-info">
                  <div class="ppme-modal-item-extra-info-detalle">
                    <p>Pan de Pizza</p>
                    <p>10 Bs</p>
                  </div>
                  <cantidad-input>
                    <div
                      origen-trabajo="producto"
                      min="0"
                      max="10"
                      id="producto-id"
                      handle="producto-handle"
                      class="ppme-modal-item-extra-cantidad"
                    >
                      <button
                        accion="decrementar"
                        class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                      >
                        {% render 'icon-basura' %}
                      </button>
                      <button
                        accion="decrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-menos' %}
                      </button>
                      <p>0</p>
                      <button
                        accion="incrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-mas' %}
                      </button>
                    </div>
                  </cantidad-input>
                </div>
              </div>
              <div class="ppme-modal-item-extra">
                <div class="ppme-modal-item-extra-imagen">
                  <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
                </div>
                <div class="ppme-modal-item-extra-info">
                  <div class="ppme-modal-item-extra-info-detalle">
                    <p>Pan de Pizza</p>
                    <p>10 Bs</p>
                  </div>
                  <cantidad-input>
                    <div
                      origen-trabajo="producto"
                      min="0"
                      max="10"
                      id="producto-id"
                      handle="producto-handle"
                      class="ppme-modal-item-extra-cantidad"
                    >
                      <button
                        accion="decrementar"
                        class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                      >
                        {% render 'icon-basura' %}
                      </button>
                      <button
                        accion="decrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-menos' %}
                      </button>
                      <p>0</p>
                      <button
                        accion="incrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-mas' %}
                      </button>
                    </div>
                  </cantidad-input>
                </div>
              </div>
              <div class="ppme-modal-item-extra">
                <div class="ppme-modal-item-extra-imagen">
                  <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
                </div>
                <div class="ppme-modal-item-extra-info">
                  <div class="ppme-modal-item-extra-info-detalle">
                    <p>Pan de Pizza</p>
                    <p>10 Bs</p>
                  </div>
                  <cantidad-input>
                    <div
                      origen-trabajo="producto"
                      min="0"
                      max="10"
                      id="producto-id"
                      handle="producto-handle"
                      class="ppme-modal-item-extra-cantidad"
                    >
                      <button
                        accion="decrementar"
                        class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                      >
                        {% render 'icon-basura' %}
                      </button>
                      <button
                        accion="decrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-menos' %}
                      </button>
                      <p>0</p>
                      <button
                        accion="incrementar"
                        class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                      >
                        {% render 'icon-mas' %}
                      </button>
                    </div>
                  </cantidad-input>
                </div>
              </div>
            </div>
          </div>
        {% endcomment %}
        <div
          id="phpp-modal-productos-pizzamitadymitad"
          class="ppme-modal-informacion-extras-body"
          style="display: none;"
        >
          <small>ESCOGE TU MITAD</small>
          <div class="ppme-modal-items-pizzamitadymitad">
            <div class="producto-item">
              <div class="producto-item-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div
                tipo-producto="simple"
                class="producto-item-detalle"
              >
                <div class="producto-item-info">
                  <h3>CHESSY LOVERS</h3>
                  <p>
                    Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                    tocino.
                  </p>
                </div>
                <h3 class="color-letras-primary">12.56 BS</h3>
                <button id="phpm--modal-btn-elegir" class="ph-btn-general">
                  <p class="color-letras-secondary">ELEGIR</p>
                </button>
              </div>
            </div>
            <div class="producto-item">
              <div class="producto-item-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div
                tipo-producto="simple"
                class="producto-item-detalle"
              >
                <div class="producto-item-info">
                  <h3>CHESSY LOVERS</h3>
                  <p>
                    Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                    tocino.
                  </p>
                </div>
                <h3 class="color-letras-primary">12.56 BS</h3>
                <button id="phpm--modal-btn-elegir" class="ph-btn-general">
                  <p class="color-letras-secondary">ELEGIR</p>
                </button>
              </div>
            </div>
            <div class="producto-item">
              <div class="producto-item-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div
                tipo-producto="simple"
                class="producto-item-detalle"
              >
                <div class="producto-item-info">
                  <h3>CHESSY LOVERS</h3>
                  <p>
                    Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                    tocino.
                  </p>
                </div>
                <h3 class="color-letras-primary">12.56 BS</h3>
                <button id="phpm--modal-btn-elegir" class="ph-btn-general">
                  <p class="color-letras-secondary">ELEGIR</p>
                </button>
              </div>
            </div>
            <div class="producto-item">
              <div class="producto-item-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div
                tipo-producto="simple"
                class="producto-item-detalle"
              >
                <div class="producto-item-info">
                  <h3>CHESSY LOVERS</h3>
                  <p>
                    Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                    tocino.
                  </p>
                </div>
                <h3 class="color-letras-primary">12.56 BS</h3>
                <button id="phpm--modal-btn-elegir" class="ph-btn-general">
                  <p class="color-letras-secondary">ELEGIR</p>
                </button>
              </div>
            </div>
            <div class="producto-item">
              <div class="producto-item-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div
                tipo-producto="simple"
                class="producto-item-detalle"
              >
                <div class="producto-item-info">
                  <h3>CHESSY LOVERS</h3>
                  <p>
                    Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                    tocino.
                  </p>
                </div>
                <h3 class="color-letras-primary">12.56 BS</h3>
                <button id="phpm--modal-btn-elegir" class="ph-btn-general">
                  <p class="color-letras-secondary">ELEGIR</p>
                </button>
              </div>
            </div>
            <div class="producto-item">
              <div class="producto-item-imagen">
                <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
              </div>
              <div
                tipo-producto="simple"
                class="producto-item-detalle"
              >
                <div class="producto-item-info">
                  <h3>CHESSY LOVERS</h3>
                  <p>
                    Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                    tocino.
                  </p>
                </div>
                <h3 class="color-letras-primary">12.56 BS</h3>
                <button id="phpm--modal-btn-elegir" class="ph-btn-general">
                  <p class="color-letras-secondary">ELEGIR</p>
                </button>
              </div>
            </div>
          </div>
        </div>
        <div class="ppme-modal-informacion-extras-footer">
          <button
            id="phppm-btn-guardar"
            class="ppme-modal-boton-guardar"
          >
            <p class="color-letras-secondary">Guardar</p>
          </button>
          <button
            id="phppm-btn-salir"
            class="ppme-modal-boton-salir"
          >
            <p class="color-letras-primary">Salir</p>
          </button>
        </div>
      </div>
    </div>
  </div>
</ph-producto>

<script>
  class PizzaHutProducto extends HTMLElement {
    constructor() {
      super();
      this.iconos = {
        iconCheckBoxOff: `{% render 'icon-checkbox-off' %}`,
        iconCheckBoxOn: `{% render 'icon-checkbox-on' %}`,
        iconEstadoOff: `{% render 'icon-estado-off' %}`,
        iconEstadoOn: `{% render 'icon-estado-on-plus' %}`,
        flechaIzquierda: `{% render 'icon-volver-atras' %}`,
        flechaDerecha: `{% render 'icon-flecha-derecha' %}`,
      };
      this.cualSeccionExtrasEs = "";
      this.estadoTrabajoExtras = 'n1';
      this.ladoPizza = '';
      this.tipoProceso = '';
      this.urlConsulta = "https://pizza-hut-bo.myshopify.com/admin/api/2025-01/graphql.json";
      this.productoSeleccionadoRamaPrincipal = null;
      // REFERENCIAS ELEMENTOSS
      {% comment %} this.imgSimple = this.querySelector('#phmp-contenido-ver-producto-simple');
      this.imgCompleja = this.querySelector('#phmp-contenido-ver-producto-complejo');
      this.btnImgComplejaIzq = this.querySelector('#phpm-btn-complejo-izq');
      this.btnImgComplejaDer = this.querySelector('#phpm-btn-complejo-der');
      this.modalBodyExtras = this.querySelector('#phpp-modal-productos-extras');
      this.modalBodyPizaaMitadyMitad = this.querySelector('#phpp-modal-productos-pizzamitadymitad');
      this.contenedorImgProductoComplejoIzq = this.querySelector('#phpm-producto-complejo-img-izq');
      this.contenedorImgProductoComplejoDer = this.querySelector('#phpm-producto-complejo-img-der');
      this.elementosN1 = this.querySelectorAll('#pmp-item-n1');
      this.elementosN2 = this.querySelectorAll('#pmp-item-n2');
      this.elementosN3 = this.querySelectorAll('#pmp-item-n3');
      this.itemsSeleccionComplejo = this.querySelectorAll('#phpm-item-pizzamitadymitad');
      this.extrasVacioContenedorN1 = this.querySelector('#phpm-vacio-extras-especiales-n1');
      this.extrasVacioContenedorN2 = this.querySelector('#phpm-vacio-extras-especiales-n2');

      this.btnModalSalir = this.querySelector('#phppm-btn-salir');
      this.btnModalGuardar = this.querySelector('#phppm-btn-guardar');
      this.btnsElegirProductoComplejo = this.querySelectorAll('#phpm--modal-btn-elegir');
      this.tituloModalExtras = this.querySelector('.phpp-modal-extras-titulo');
       {% endcomment %}
      
      this.btnHazUnPedido = this.querySelector('#phpm-btn-haz-un-pedido');
      this.btnAgregarCarrito = this.querySelector('#phpm-btn-agregar-carrito'); 
      this.btnVolverAtras = this.querySelector('.pmph-volver-atras');

      
      this.modalProductoExtras = this.querySelector('#pmph-modal-productos-extras');
      this.contenedorItemsComplejos = this.querySelector('#pmph-seleccion-pizza-mitadymitad');
      this.extrasContenedorN1 = this.querySelector('#phpm-extras-especiales-n1');
      this.extrasContenedorN2 = this.querySelector('#phpm-extras-especiales-n2');
      this.btnAnadirExtrasN1 = this.querySelector('#phpm-btn-anadir-extras-n1');
      this.btnAnadirExtrasN2 = this.querySelector('#phpm-btn-anadir-extras-n2');
    }

    connectedCallback() {
      // EVENTOS INICIALIZAR
      this.btnHazUnPedido.addEventListener('click', this.redireccionHazUnPedido.bind(this));
      this.btnAgregarCarrito.addEventListener('click', this.agregarCarrito.bind(this));
      {% comment %} this.elementosN1.forEach((elemento) => {
        elemento.addEventListener('click', this.procesoItemN1.bind(this, elemento));
      });

      this.elementosN2.forEach((elemento) => {
        elemento.addEventListener('click', this.procesoItemN2.bind(this, elemento));
      });

      this.elementosN3.forEach((elemento) => {
        elemento.addEventListener('click', this.procesoItemN3.bind(this, elemento));
      });

      this.itemsSeleccionComplejo.forEach((elemento) => {
        elemento.addEventListener('click', this.procesoItemComplejo.bind(this, elemento));
      });

      this.btnImgComplejaDer.addEventListener('click', this.procesoItemComplejo.bind(this, this.btnImgComplejaDer));
      this.btnImgComplejaIzq.addEventListener('click', this.procesoItemComplejo.bind(this, this.btnImgComplejaIzq));

      this.extrasVacioContenedorN1.addEventListener('click', this.procesoItemExtrasAbrirModal.bind(this, 'n1'));
      this.extrasVacioContenedorN2.addEventListener('click', this.procesoItemExtrasAbrirModal.bind(this, 'n2'));

      this.btnAnadirExtrasN1.addEventListener('click', this.procesoAnadirProductos.bind(this, 'n1'));
      this.btnAnadirExtrasN2.addEventListener('click', this.procesoAnadirProductos.bind(this, 'n2'));
      this.btnModalSalir.addEventListener('click', this.cerrarModal.bind(this));
      this.btnModalGuardar.addEventListener('click', this.procesarProductoModal.bind(this)); {% endcomment %}

      // INICIALIZAR ELEMENTOS Y PROCESOS CLAVES
      this.modalProductoExtras.style.display = 'none'; 
      this.contenedorItemsComplejos.style.display = 'none';
      this.btnAnadirExtrasN1.style.display = 'none';
      this.btnAnadirExtrasN2.style.display = 'none';
      this.extrasContenedorN1.style.display = 'none';
      this.extrasContenedorN2.style.display = 'none';
      this.inicializarMedianteDataLocalStorage();
    }

    declararComponentesDespuesCreacion(){
      // REFERENCIAS ELEMENTOS
      this.seccionProductosRamaPrincipales = this.querySelectorAll('#pmph-seleccion-rama-principal');
      this.seccionProductosSubRama = this.querySelectorAll('#pmph-seleccion-subRama');
      this.btnsProductosRamaPrincipales = this.querySelectorAll('#pmp-item-rama-principal');
      this.btnsProductosSubRama = this.querySelectorAll('#pmp-item-subRama');

      this.seccionExtrasPostres = this.querySelector('#phpp-modal-productos-postres');
      this.seccionExtrasGaseosasCerversas = this.querySelector('#phpp-modal-productos-gaseosasycervezas');

      // INICIALIZAR EVENTOS
      this.btnsProductosRamaPrincipales.forEach((btn) => {
        btn.addEventListener('click', this.procesoItemRamaPrincipal.bind(this, btn));
      });
      this.btnsProductosSubRama.forEach((btn) => {
        btn.addEventListener('click', this.procesoItemSubRama.bind(this, btn));
      }); 
      
      // INICIALIZAR ELEMENTOS Y PROCESOS CLAVES
      this.seccionExtrasPostres.style.display = 'none';
      this.seccionExtrasGaseosasCerversas.style.display = 'none';
    }

    dividirTitulo(titulo) {
      // Verificar si es el caso excepcional "Super Personal"
      if (titulo.includes("Super personal")) {
        return {
          importante: "Super personal",
          mensaje: titulo.replace("Super personal", "").trim()
        };
      }
      
      // Caso general: la primera palabra es la importante
      const palabras = titulo.split(" ");
      const importante = palabras[0];
      const mensaje = palabras.slice(1).join(" ");
      
      return {
        importante,
        mensaje
      };
    }

    obtenerStockGenericoTrabajo(productoTrabajo){
      // Verificar si tenemos una sucursal seleccionada
      const dataSucursal = JSON.parse(localStorage.getItem('sucursal-informacion'));
      if(!dataSucursal || dataSucursal == "") return productoTrabajo.stockTotal;

      const sucursalEncontrada = productoTrabajo.sucursales.find(
        sucursal => sucursal.nombre == dataSucursal.name
      );

      return sucursalEncontrada 
      ? parseInt(sucursalEncontrada.stock) 
      : productoTrabajo.stockTotal;
    }

    async inicializarMedianteDataLocalStorage() {
      // Traer informacion para contruir el producto
      const dataProducto = JSON.parse(localStorage.getItem('phpp-productoData'));
      // Primero se crea la estructura generale productos del atributo => productoParaEstructuraTrabajo
      var estructuraContruccion = dataProducto.estructura;
      var coleccionSubProductosTrabajar = [];

      var indice = 0;
      for (var ramaPrincipal in estructuraContruccion.ramas) {
        const productoTrabajo = dataProducto.productoParaEstructuraTrabajo[indice];

        if (ramaPrincipal == productoTrabajo.codigo) {
          estructuraContruccion.ramas[ramaPrincipal].productos = productoTrabajo.productos;
          var subProductosTrabajo = null;
          // Esto es la estructura rama sus ramas hijas => PCE y PCMB
          for (var subRama in estructuraContruccion.ramas[ramaPrincipal].ramas) {
            var subIndice = 0;
            subProductosTrabajo = [];

            // Estos son los productos => PCT de la rama principa
            productoTrabajo.productos.forEach((producto) => {
              // Aqui trae los los productos de la subRama = [PCE, PCMB]
              producto.ramas.forEach((subProducto) => {
                if (subRama == subProducto.codigo) {
                  subProducto.productos.forEach((subProductoTrabajo) => {
                    if (!subProductosTrabajo.some((item) => item.idShopify === subProductoTrabajo.idShopify)) {
                      subProductosTrabajo.push(subProductoTrabajo);
                    }
                  });
                }
              });
            });

            estructuraContruccion.ramas[ramaPrincipal].ramas[subRama].productos = subProductosTrabajo;
          }
        }
        indice++;
      }

      console.log('dataProducto :', {
        estructura: estructuraContruccion,
        producto: dataProducto.producto,
        productoParaEstructuraTrabajo: dataProducto.productoParaEstructuraTrabajo,
        subProductoSeleccionado: dataProducto.tamanoSeleccionado,
      });

      var productoImagenHTML = '';
      const contenedorImg = this.querySelector('.pmph-imagen');
      productoImagenHTML += `
        <img
        id="phmp-contenido-ver-producto-simple"
        class="phmp-img-simple"
        src="${dataProducto.producto.imagen}"
        alt="${dataProducto.producto.titulo}"
        width="100%"
        height="100%"
        >
      `;
      contenedorImg.innerHTML = productoImagenHTML;

      var detallaBasicoProducto = '';
      detallaBasicoProducto += `
        <button class="pmph-volver-atras icon-color-primary ">
          {% render 'icon-volver-atras' %}
          <p class="color-letras-primary">Volver</p>
        </button>
        <small>${dataProducto.producto.titulo}</small>
        <p>${dataProducto.producto.descripcion}</p>
      `;
      this.querySelector('.pmph-header').innerHTML = detallaBasicoProducto;

      // Aqui se va definir si se usar el stockTodo o de alguna sucursal especifica
      var stockTrabajo = this.optenerStockTrabajo();
      console.log('stockTrabajo :', stockTrabajo);

      var detalleSubProductos = '';
      detalleSubProductos += `
        <div class="pmph-seleccion-normal pmph-cantidad">
          <h3>Cantidad</h3>
          <cantidad-input>
            <div
              origen-trabajo="producto"
              min="0"
              max="${stockTrabajo}"
              id="producto-id"
              handle="producto-handle"
              class="pmph-cantidad-selector"
            >
              <button
                accion="decrementar"
                class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
              >
                {% render 'icon-basura' %}
              </button>
              <button
                accion="decrementar"
                class="pmph-cantidad-selector-button  elemento-oculto icon-color-tertiary"
              >
                {% render 'icon-menos' %}
              </button>
              <p>0</p>
              <button
                accion="incrementar"
                class="pmph-cantidad-selector-button icon-color-tertiary"
              >
                {% render 'icon-mas' %}
              </button>
            </div>
          </cantidad-input>
        </div>
      `;
      // Contruccion de la estructura de los (SUB - VARIANTES) productos para el HTML
      for (var ramaPrincipal in estructuraContruccion.ramas) {
        var infoRamaPrincipal = estructuraContruccion.ramas[ramaPrincipal];
        var productoRamaTrabajo = [];

        // En esta parte me traigo los productos PCT => Personal Familiar Mediana
        dataProducto.productoParaEstructuraTrabajo.forEach((producto) => {
          if (ramaPrincipal == producto.codigo) {
            productoRamaTrabajo = producto.productos;
          }
        });

        // Se va optener el primer elemento sus sub elemento al primeor con precio 0
        var auxProductoPreSeleccionado = productoRamaTrabajo.find((item) => parseInt(item.precio) == 0);

        detalleSubProductos += `
        <div
        data-max="${infoRamaPrincipal.max}"
        data-min="${infoRamaPrincipal.min}"
        data-codigo="${ramaPrincipal}"
        id="pmph-seleccion-rama-principal" class="pmph-seleccion-normal">
          <h3>${infoRamaPrincipal.titulo}</h3>
        `;
        infoRamaPrincipal.productos.forEach((producto) => {
          const precio = parseInt(producto.precio) == 0 ? '' : ` + ${producto.precio} Bs`;
          const {importante , mensaje} = this.dividirTitulo(producto.titulo+precio);
          if (auxProductoPreSeleccionado.titulo == producto.titulo) {
            detalleSubProductos += `
            <button 
            data-idtrabajo="${producto.idTrabajo}"
            data-idshopify="${producto.idShopify}"
            id="pmp-item-rama-principal" class="pmp-item-simple seleccionado">
              <div class="pmp-item-simple-info">
                <h3>${importante}</h3>
                <p>${mensaje}</p>
              </div>
              <div class="pmp-item-simple-escoger">
               ${this.iconos.iconEstadoOn}
              </div>
          </button>
            `;
          }else{
            detalleSubProductos += `
            <button 
            data-idtrabajo="${producto.idTrabajo}"
            data-idshopify="${producto.idShopify}"
            id="pmp-item-rama-principal" class="pmp-item-simple">
              <div class="pmp-item-simple-info">
                <h3>${importante}</h3>
                <p>${mensaje}</p>
              </div>
              <div class="pmp-item-simple-escoger">
               ${this.iconos.iconEstadoOff}
              </div>
            </button>
            `;
          }
        });
        detalleSubProductos += `
        </div>
        `;

        // Bandera para tipo de botones = circle o checkbx
        var bptb = false;

        for (var subRama in infoRamaPrincipal.ramas) {
          var infoSubRama = infoRamaPrincipal.ramas[subRama];
          var subProductoTrabajo = [];
          var banderaPrimero = false;
          // De los productos PCT me traigo sus ramas del primer elemento en este caso (Personal)
          auxProductoPreSeleccionado.ramas.forEach((producto) => {
            if (subRama == producto.codigo) {
              subProductoTrabajo = producto.productos;
            }
          });

          detalleSubProductos += `
          <div 
          data-max="${infoSubRama.max}"
          data-min="${infoSubRama.min}"
          data-codigo="${subRama}"
          tipo-boton="${bptb ? 'checkbox' : 'circle'}"
          id="pmph-seleccion-subRama" class="pmph-seleccion-especial ">
          <h3>${infoSubRama.titulo}</h3>
          `;

          infoSubRama.productos.forEach((producto,index) => {
            const tituloTrabajo = producto.titulo.startsWith("Extra ") ? producto.titulo.substring(6) : producto.titulo;
            const sePondraNombre = infoSubRama.titulo == "Masas y Bordes";
            // Verifica si el producto se encuentra dentro del categoria de ramas de la (Personal)
            if(subProductoTrabajo.some((item) => item.idShopify === producto.idShopify)){

              // Si se encuentra todos estara activado
              if(banderaPrimero == false && infoSubRama.min == "1" && parseInt(producto.precio) == 0){
                // Se auto preseleccionara el primer elemento
                detalleSubProductos += `
                <button 
                data-idtrabajo="${producto.idTrabajo}"
                data-idshopify="${producto.idShopify}"
                id="pmp-item-subRama" class="pmp-item-complejo seleccionado">
                  <div class="pmp-item-complejo-imagen ">
                  ${ producto.imagen == "" || producto.imagen == undefined || producto.imagen == null?
                     `<img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="${tituloTrabajo}" width="100%" height="100%">` :
                    `<img src="${producto.imagen}" alt="${tituloTrabajo}" width="100%" height="100%">`}
                  </div>
                  <div class="pmp-item-complejo-info">
                    <div class="pmp-item-complejo-info-detalle ">
                      <p>${tituloTrabajo}</p>
                      ${sePondraNombre ? '' : `<p id="pmp-item-info-precio">+ ${producto.precio} Bs</p>`}
                    </div>
                    <div class="pmp-item-simple-escoger">
                      ${bptb ? this.iconos.iconCheckBoxOn : this.iconos.iconEstadoOn}
                    </div>
                  </div>
                </button>
                `;
                banderaPrimero = true;
              }else{
                // Elemento activado pero no seleccionado
                detalleSubProductos += `

                <button
                data-idtrabajo="${producto.idTrabajo}"
                data-idshopify="${producto.idShopify}"
                id="pmp-item-subRama" class="pmp-item-complejo ">
                  <div class="pmp-item-complejo-imagen ">
                                      ${ producto.imagen == "" ?
                     `<img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="${tituloTrabajo}" width="100%" height="100%">` :
                    `<img src="${producto.imagen}" alt="${tituloTrabajo}" width="100%" height="100%">`}
                  </div>
                  <div class="pmp-item-complejo-info">
                    <div class="pmp-item-complejo-info-detalle ">
                      <p>${tituloTrabajo}</p>
                       ${sePondraNombre ? '' : `<p id="pmp-item-info-precio">+ ${producto.precio} Bs</p>`}
                    </div>
                    <div class="pmp-item-simple-escoger">
                      ${bptb ? this.iconos.iconCheckBoxOff : this.iconos.iconEstadoOff}
                    </div>
                  </div>
                </button>
                `;
              }
            }else{
              // Aqui el producto no se encuentra se lo desactivaba
              detalleSubProductos += `
                <button
                data-idtrabajo="${producto.idTrabajo}"
                data-idshopify="${producto.idShopify}"
                id="pmp-item-subRama" class="pmp-item-complejo desactivado">
                  <div class="pmp-item-complejo-imagen ">
                                      ${ producto.imagen == "" ?
                     `<img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="${tituloTrabajo}"1" width="100%" height="100%">` :
                    `<img src="${producto.imagen}" alt="${tituloTrabajo}" width="100%" height="100%">`}
                  </div>
                  <div class="pmp-item-complejo-info">
                    <div class="pmp-item-complejo-info-detalle ">
                      <p>${tituloTrabajo}</p>
                       ${sePondraNombre ? '' : `<p id="pmp-item-info-precio">+ ${producto.precio} Bs</p>`}
                    </div>
                    <div class="pmp-item-simple-escoger">
                      ${bptb ? this.iconos.iconCheckBoxOff : this.iconos.iconEstadoOff}
                    </div>
                  </div>
                </button>
              `;
            }
          });
          detalleSubProductos += `
          </div>
          `;
          bptb = !bptb;
        }
      }

      this.querySelector('.pmph-seleccion').insertAdjacentHTML('afterbegin', detalleSubProductos);
      
      // Creacion de elementos de la coleccion Postres
      await this.creacionHTMLPostres();

      // Creacion de elementos de la coleccion Gaseosas y Postres
      await this.creacionHTMLGaseosasCervesas();
      
      // Declaracion referenciar - inicializar - eventos
      this.declararComponentesDespuesCreacion();

      // PRODUCTO SIMPLEE
      {% comment %} const tipoProducto = localStorage.getItem('phpp-tipo-producto') || 'simple';
      console.log(tipoProducto);
      if (tipoProducto == 'simple') {
        this.imgSimple.style.display = 'flex';
        this.imgCompleja.style.display = 'none';
      } else if (tipoProducto == 'complejo') {
        this.imgSimple.style.display = 'none';
        this.imgCompleja.style.display = 'flex';
        this.contenedorItemsComplejos.style.display = 'flex';
      } {% endcomment %}
      // PRODUCTO COMPLEJO
    }

    async creacionHTMLGaseosasCervesas(){
      // Obtener coleccion de productos 
      const {informacionColeccion,  productosColeccion } = await this.obtenerColeccionShopify('Gaseosas y Cervesas');
      var contenidoHTML = `
        <div id="phpp-modal-productos-gaseosasycervezas" class="ppme-modal-informacion-extras-body">
          <small class="phpp-modal-extras-titulo">GASEOSAS Y CERVESAS</small>
          <div class="ppme-modal-items-extras">
      `;

      productosColeccion.forEach((producto) => {
        var stockTrabajo =  this.obtenerStockGenericoTrabajo(producto);

        contenidoHTML += `
            <div class="ppme-modal-item-extra">
              <div class="ppme-modal-item-extra-imagen">
                <img src="${producto.imagen}" alt="${producto.titulo}" width="100%" height="100%">
              </div>
              <div class="ppme-modal-item-extra-info">
                <div class="ppme-modal-item-extra-info-detalle">
                  <p>${producto.titulo}</p>
                  <p>${producto.estructura.precio} Bs</p>
                </div>
                <cantidad-input>
                  <div
                    origen-trabajo="producto"
                    min="0"
                    max="${stockTrabajo}"
                    id="${producto.idTrabajo}"
                    handle="${producto.handle}"
                    class="ppme-modal-item-extra-cantidad"
                  >
                    <button
                      accion="decrementar"
                      class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                    >
                      {% render 'icon-basura' %}
                    </button>
                    <button
                      accion="decrementar"
                      class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                    >
                      {% render 'icon-menos' %}
                    </button>
                    <p>0</p>
                    <button
                      accion="incrementar"
                      class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                    >
                      {% render 'icon-mas' %}
                    </button>
                  </div>
                </cantidad-input>
              </div>
            </div>
      `;
      });

      contenidoHTML += `
          </div>
        </div>
      `;

      this.querySelector('.pmph-modal-informacion-extras').insertAdjacentHTML('afterbegin', contenidoHTML);
    }

    async creacionHTMLPostres(){
      // Obtener coleccion de productos 
      const {informacionColeccion,  productosColeccion } = await this.obtenerColeccionShopify('Postres');
      var contenidoHTML = `
        <div id="phpp-modal-productos-postres" class="ppme-modal-informacion-extras-body">
          <small class="phpp-modal-extras-titulo">POSTRES</small>
          <div class="ppme-modal-items-extras">
      `;

      productosColeccion.forEach((producto) => {
        var stockTrabajo = this.obtenerStockGenericoTrabajo(producto);

        contenidoHTML += `
            <div class="ppme-modal-item-extra">
              <div class="ppme-modal-item-extra-imagen">
                <img src="${producto.imagen}" alt="${producto.titulo}" width="100%" height="100%">
              </div>
              <div class="ppme-modal-item-extra-info">
                <div class="ppme-modal-item-extra-info-detalle">
                  <p>${producto.titulo}</p>
                  <p>${producto.estructura.precio} Bs</p>
                </div>
                <cantidad-input>
                  <div
                    origen-trabajo="producto"
                    min="0"
                    max="${stockTrabajo}"
                    id="${producto.idTrabajo}"
                    handle="${producto.handle}"
                    class="ppme-modal-item-extra-cantidad"
                  >
                    <button
                      accion="decrementar"
                      class="pmph-cantidad-selector-button elemento-oculto icon-color-tertiary"
                    >
                      {% render 'icon-basura' %}
                    </button>
                    <button
                      accion="decrementar"
                      class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                    >
                      {% render 'icon-menos' %}
                    </button>
                    <p>0</p>
                    <button
                      accion="incrementar"
                      class="ppme-modal-item-extra-cantidad-button icon-color-tertiary"
                    >
                      {% render 'icon-mas' %}
                    </button>
                  </div>
                </cantidad-input>
              </div>
            </div>
      `;
      });

      contenidoHTML += `
          </div>
        </div>
      `;

      this.querySelector('.pmph-modal-informacion-extras').insertAdjacentHTML('afterbegin', contenidoHTML);
    }

    async obtenerColeccionShopify(coleccion) {
      const graphQLQuery = `
        query GetCollectionByFlexibleTitle {
          collections(first: 1, query: "title:*${coleccion}*") {
            edges {
              node {
                id
                title
                handle
                metafield(namespace: "estructura", key: "json") {
                  value
                }
                products(first: 50) {
                  edges {
                    node {
                      id
                      title
                      handle
                      description
                      totalInventory
                      images(first: 1) {
                        edges {
                          node {
                            url
                          }
                        }
                      }
                      metafield(namespace: "estructura", key: "json") {
                        value
                      }
                      variants(first: 1) {
                        edges {
                          node {
                            inventoryItem {
                              inventoryLevels(first: 100) {
                                edges {
                                  node {
                                    location {
                                      name
                                    }
                                    quantities(names: ["available"]) {
                                      name
                                      quantity
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      `;
    
      try {
        // Realiza la solicitud a la API de Shopify
        const myTest = 'shpat_' + '45f4a7476152f4881d058f87ce063698';
        const respuesta = await fetch(this.urlConsulta, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-Shopify-Access-Token': myTest,
          },
          body: JSON.stringify({ query: graphQLQuery }),
        });
    
        if (!respuesta.ok) {
          throw new Error(`Error de red: ${respuesta.status} ${respuesta.statusText}`);
        }
    
        // Obtener los datos de la respuesta
        const datosRespuesta = await respuesta.json();
    
        // Verificar si tenemos datos
        if (!datosRespuesta.data || !datosRespuesta.data.collections.edges.length || !datosRespuesta.data.collections.edges[0].node.products.edges.length) {
          console.log("No se encontraron productos en la colección PIZZA");
          return [];
        }
    
        // Extraer la información de la colección 
        const coleccion = datosRespuesta.data.collections.edges[0].node;
        var estructuraColeccion = null;
        if (coleccion.metafield && coleccion.metafield.value) {
          try {
            estructuraColeccion = JSON.parse(coleccion.metafield.value);
          } catch (e) {
            estructuraColeccion = null;
            console.error('Error al parsear la estructura de la colección:', e);
          } 
        }
    
        // Transformar los productos a un formato más simple
        const productosSimplificados = coleccion.products.edges.map(edge => {
          const producto = edge.node;
          const imagenURL = producto.images.edges.length > 0 ? producto.images.edges[0].node.url : '';
          
          // Obtener el inventario total del producto
          const stockGeneral = producto.totalInventory || 0;
          
          // Obtener el inventario por sucursal
          const sucursales = [];
          if (producto.variants && producto.variants.edges.length > 0) {
            const variante = producto.variants.edges[0].node;
            if (variante.inventoryItem && variante.inventoryItem.inventoryLevels.edges.length > 0) {
              variante.inventoryItem.inventoryLevels.edges.forEach(levelEdge => {
                const level = levelEdge.node;
                const nombreSucursal = level.location.name;
                let stockSucursal = 0;
                
                // Buscar la cantidad disponible
                if (level.quantities && level.quantities.length > 0) {
                  const availableQuantity = level.quantities.find(q => q.name === "available");
                  if (availableQuantity) {
                    stockSucursal = availableQuantity.quantity;
                  }
                }
                
                sucursales.push({
                  nombre: nombreSucursal,
                  stock: stockSucursal
                });
              });
            }
          }
    
          // Crear un objeto simplificado del producto
          const productoSimplificado = {
            id: producto.id,
            titulo: producto.title,
            handle: producto.handle,
            descripcion: producto.description,
            imagen: imagenURL,
            stockTotal: stockGeneral,
            sucursales: sucursales,
            estructura: producto.metafield && producto.metafield.value ? JSON.parse(producto.metafield.value) : "",
          };

          return productoSimplificado;
        });
    
        // Crear un objeto con información de la colección y los productos
        const resultado = {
          informacionColeccion: {
            id: coleccion.id,
            titulo: coleccion.title,
            handle: coleccion.handle,
            estructura: estructuraColeccion
          },
          productosColeccion: productosSimplificados
        };

        console.log('Datos de la colección obtenidos:', resultado);
    
        return resultado;
    
      } catch (error) {
        // Errores al traer los datos
        console.error('Error al obtener los datos de la colección:', error);
        return [];
      }
    }

    procesoItemN1(elemento) {
      const estaHabilitado = elemento.classList.contains('desactivado');
      if (estaHabilitado) return;

      const icono = elemento.querySelector('.pmp-item-simple-escoger');
      const estaSeleccionado = elemento.classList.contains('seleccionado');

      if (estaSeleccionado) {
        elemento.classList.remove('seleccionado');
        icono.innerHTML = this.iconos.iconEstadoOff;
      } else {
        elemento.classList.add('seleccionado');
        icono.innerHTML = this.iconos.iconEstadoOn;
      }

      this.elementosN1.forEach((item) => {
        if (item !== elemento) {
          item.classList.remove('seleccionado');
          const icono = item.querySelector('.pmp-item-simple-escoger');
          icono.innerHTML = this.iconos.iconEstadoOff;
        }
      });
    }

    procesoItemN2(elemento) {
      const estaHabilitado = elemento.classList.contains('desactivado');
      if (estaHabilitado) return;

      const icono = elemento.querySelector('.pmp-item-simple-escoger');
      const estaSeleccionado = elemento.classList.contains('seleccionado');

      if (estaSeleccionado) {
        elemento.classList.remove('seleccionado');
        icono.innerHTML = this.iconos.iconEstadoOff;
      } else {
        elemento.classList.add('seleccionado');
        icono.innerHTML = this.iconos.iconEstadoOn;
      }

      this.elementosN2.forEach((item) => {
        if (item !== elemento) {
          item.classList.remove('seleccionado');
          const icono = item.querySelector('.pmp-item-simple-escoger');
          icono.innerHTML = this.iconos.iconEstadoOff;
        }
      });
    }

    procesoItemN3(elemento) {
      const estaHabilitado = elemento.classList.contains('desactivado');
      if (estaHabilitado) return;

      const icono = elemento.querySelector('.pmp-item-simple-escoger');
      const estaSeleccionado = elemento.classList.contains('seleccionado');

      if (estaSeleccionado) {
        elemento.classList.remove('seleccionado');
        icono.innerHTML = this.iconos.iconCheckBoxOff;
      } else {
        elemento.classList.add('seleccionado');
        icono.innerHTML = this.iconos.iconCheckBoxOn;
      }

      this.elementosN3.forEach((item) => {
        if (item !== elemento) {
          item.classList.remove('seleccionado');
          const icono = item.querySelector('.pmp-item-simple-escoger');
          icono.innerHTML = this.iconos.iconCheckBoxOff;
        }
      });
    }

    procesoItemComplejo(elemento) {
      this.tipoProceso = 'pizzaMitadyMitad';
      this.modalProductoExtras.style.display = 'flex';
      this.modalBodyExtras.style.display = 'none';
      this.modalBodyPizaaMitadyMitad.style.display = 'flex';

      const data = elemento.getAttribute('lado-pizza') || elemento.getAttribute('lado-pizza-btn');
      this.ladoPizza = data;
    }

    procesoAnadirProductos(tipoExtras) {
      this.modalProductoExtras.style.display = 'flex';
      this.modalBodyExtras.style.display = 'flex';
      this.modalBodyPizaaMitadyMitad.style.display = 'none';
    }

    cerrarModal() {
      this.modalProductoExtras.style.display = 'none';
    }

    procesarProductoModal() {
      if (this.tipoProceso == 'extras') {
        if (this.estadoTrabajoExtras == 'n1') {
          this.extrasContenedorN1.style.display = 'flex';
          this.extrasVacioContenedorN1.style.display = 'none';
          this.btnAnadirExtrasN1.style.display = 'flex';
        }

        if (this.estadoTrabajoExtras == 'n2') {
          this.extrasContenedorN2.style.display = 'flex';
          this.extrasVacioContenedorN2.style.display = 'none';
          this.btnAnadirExtrasN2.style.display = 'flex';
        }
      }

      let elementoPizzaOrigen;
      console.log('hola desde el test', this.ladoPizza);
      if (this.tipoProceso == 'pizzaMitadyMitad') {
        if (this.ladoPizza == 'izquierda') {
          elementoPizzaOrigen = document.querySelector('[lado-pizza="izquierda"]');
        }
        if (this.ladoPizza == 'derecha') {
          elementoPizzaOrigen = document.querySelector('[lado-pizza="derecha"]');
        }
        elementoPizzaOrigen.classList.add('seleccionado');
        if (this.ladoPizza == 'izquierda') {
          console.log('elemento Izquierdo', this.btnImgComplejaIzq);
          this.btnImgComplejaIzq.classList.add('seleccionado');
          const contenedorIcono = this.btnImgComplejaIzq.querySelector('.phmp-psm-icon');
          contenedorIcono.innerHTML = this.iconos.iconEstadoOn;
          this.contenedorImgProductoComplejoIzq.classList.add('seleccionado');
        }

        if (this.ladoPizza == 'derecha') {
          console.log('elemento Derecho', this.btnImgComplejaDer);
          this.btnImgComplejaDer.classList.add('seleccionado');
          const contenedorIcono = this.btnImgComplejaDer.querySelector('.phmp-psm-icon');
          contenedorIcono.innerHTML = this.iconos.iconEstadoOn;
          this.contenedorImgProductoComplejoDer.classList.add('seleccionado');
        }
      }
      this.modalProductoExtras.style.display = 'none';
    }

    procesoItemExtrasAbrirModal(tipoExtras) {
      this.tipoProceso = 'extras';
      this.estadoTrabajoExtras = tipoExtras;
      this.modalProductoExtras.style.display = 'flex';
      this.modalBodyExtras.style.display = 'flex';
      this.modalBodyPizaaMitadyMitad.style.display = 'none';
      if (tipoExtras == 'n1') {
        this.tituloModalExtras.innerHTML = 'POSTRES';
      } else {
        this.tituloModalExtras.innerHTML = 'GASEOSAS Y CERVEZAS';
      }
    }

    redireccionHazUnPedido() {
      window.location.href = '/pages/carrito';
     }

    agregarCarrito() {
      const perra = AuxiliaresGlobal.sucursal;
      console.log('sucursal', perra);
      AuxiliaresGlobal.agregarCarrito(1);
    }

    optenerStockTrabajo() {
      // Verificar si tenemos una sucursal seleccionada
      const dataSucursal = JSON.parse(localStorage.getItem('sucursal-informacion'));
      // Información del producto
      const dataTrabajo = JSON.parse(localStorage.getItem('phpp-productoData'));
      
      if(!dataSucursal || dataSucursal == "") return dataTrabajo.producto.stockTotal;
      
      const sucursalEncontrada = dataTrabajo.producto.sucursales.find(
        sucursal => sucursal.nombre == dataSucursal.name
      );
      
      return sucursalEncontrada 
        ? parseInt(sucursalEncontrada.stock) 
        : dataTrabajo.producto.stockTotal;
    }

    procesoItemRamaPrincipal(btnElemento){
      // SIEMPE LA LOGICA DE LOS PRINCIPALES ES QUE SELECCIONA UNO SOLO Y SUS SUB PRODUCTOS SE ACTUALIZAN

      // Ir a buscar al padre de esa seccion con id="pmph-seleccion-rama-principal"
      // Despues obtener 4 valores max - min - codigo - tipo boton
      const contenedorPadre = btnElemento.closest('#pmph-seleccion-rama-principal');
      const max = contenedorPadre.getAttribute('data-max');
      const min = contenedorPadre.getAttribute('data-min');
      const codigo = contenedorPadre.getAttribute('data-codigo');

      // El btnElemento tiene un atributo data-idtrabajo y data-idshopify
      const idTrabajo = btnElemento.getAttribute('data-idtrabajo');
      const idShopify = btnElemento.getAttribute('data-idshopify');

      // Al ponerlo como seleccionado actualizar las sub ramas this.btnsProductosSubRama usando 
      // la informacion estructura del localStorage data.productoParaEstructuraTrabajo y data.estructura
      // 1. Mediante el codigo y el (idTrabajo o idShopify) se obtiene el productuctos trabajo
      const dataLocalStorage = JSON.parse(localStorage.getItem('phpp-productoData'));
      let elementoTrabajo = null;

      dataLocalStorage.productoParaEstructuraTrabajo.some((objetoDetalle)=>{
        if (objetoDetalle.codigo == codigo) {
          return objetoDetalle.productos.some((productoRamaPrincipal) => {
            if (productoRamaPrincipal.idTrabajo == idTrabajo || productoRamaPrincipal.idShopify == idShopify) {
              elementoTrabajo = productoRamaPrincipal;
              return true; 
            }
            return false;
          });
        }
        return false;
      });

      this.productoSeleccionadoRamaPrincipal = elementoTrabajo;
      
      // Actualuzar, preseleccionados subRamas y id del HTML de las subRamas tambien precios desactivar
      // los que no son de esa rama principal
      this.seccionProductosSubRama.forEach((elementoSeccion) => {
        const codigo = elementoSeccion.getAttribute('data-codigo');
        const max = elementoSeccion.getAttribute('data-max');
        const min = elementoSeccion.getAttribute('data-min');
        const tipoBoton = elementoSeccion.getAttribute('tipo-boton');

        let productosTrabajo = elementoTrabajo.ramas.find((rama) => rama.codigo == codigo);
        const hijosSeccion = elementoSeccion.querySelectorAll('#pmp-item-subRama');

        if (!productosTrabajo) {
          console.log(`No se encontró rama con código ${codigo} para este elemento`);
          return;
        }

        let seleccionaPrimero = false;
        hijosSeccion.forEach((itemHTML) => {
          const idTrabajo = itemHTML.getAttribute('data-idtrabajo');
          const idShopify = itemHTML.getAttribute('data-idshopify');
          const estaSeleccionado = itemHTML.classList.contains('seleccionado');
          const estaDesactivado = itemHTML.classList.contains('desactivado');

          // Encontrar al itemHTML mediante codigo idShopify dentro de productosTrabajo
          const productoTrabajo = productosTrabajo.productos.find((producto) => producto.idShopify == idShopify);
          
          // Si no se encontro el itemHTML dentro de productosTrabajo se lo desactiva
          if (!productoTrabajo) {
            itemHTML.classList.remove('seleccionado');
            itemHTML.classList.add('desactivado');
            itemHTML.querySelector('.pmp-item-simple-escoger').innerHTML = tipoBoton == 'checkbox' ? this.iconos.iconCheckBoxOff : this.iconos.iconEstadoOff;
          }else{
            // Si se encuentra coincidencia se lo activa
            if(min == "1" && parseInt(productoTrabajo.precio) == 0 && seleccionaPrimero == false){
              // Si el min es 1 y el elemento productoTrabajo es 0 (se va preseleccionar)
              itemHTML.classList.remove('desactivado');
              itemHTML.classList.add('seleccionado');
              itemHTML.querySelector('.pmp-item-simple-escoger').innerHTML = tipoBoton == 'checkbox' ? this.iconos.iconCheckBoxOn : this.iconos.iconEstadoOn;
              itemHTML.setAttribute('data-idtrabajo', productoTrabajo.idTrabajo);
              seleccionaPrimero = true;
            }else{
              itemHTML.classList.remove('desactivado');
              itemHTML.classList.remove('seleccionado');
              itemHTML.querySelector('.pmp-item-simple-escoger').innerHTML = tipoBoton == 'checkbox' ? this.iconos.iconCheckBoxOff : this.iconos.iconEstadoOff;
              itemHTML.setAttribute('data-idtrabajo', productoTrabajo.idTrabajo);
            }  
            if(itemHTML.querySelectorAll('p').length == 2){
              itemHTML.querySelectorAll('p')[1].innerHTML = `+ ${productoTrabajo.precio} Bs`;
            }
          }
        });
      });

      // Desactivar los botones y cambiar el icono excepto al btnElemento(activarlo y seleccionarlo)
      this.btnsProductosRamaPrincipales.forEach((itemHTML) => {
        if (itemHTML !== btnElemento) {
          itemHTML.classList.remove('seleccionado');
          itemHTML.querySelector('.pmp-item-simple-escoger').innerHTML = this.iconos.iconEstadoOff;
        }else{
          itemHTML.classList.remove('desactivado');
          itemHTML.classList.add('seleccionado');
          itemHTML.querySelector('.pmp-item-simple-escoger').innerHTML = this.iconos.iconEstadoOn;
        }
      });

      // Hay que actualizar el valor de los botones inferiores

    }

    procesoItemSubRama(btnElemento){
      const cantidadSeleccionados = contenedorPadreSeccion.querySelectorAll('.seleccionado').length;
      if (cantidadSeleccionados >= max) return;

      // Busco al contenedor padre de la seccion con id="pmph-seleccion-subRama"
      // Obtengo su informacion max min codigo (tipo boton)
      const contenedorPadreSeccion = btnElemento.closest('#pmph-seleccion-subRama');
      const hermanosBtnElemento = contenedorPadreSeccion.querySelectorAll('#pmp-item-subRama');
      const max = contenedorPadreSeccion.getAttribute('data-max');
      const min = contenedorPadreSeccion.getAttribute('data-min');
      const codigo = contenedorPadreSeccion.getAttribute('data-codigo');
      const tipoBoton = contenedorPadreSeccion.getAttribute('tipo-boton');

      // El btnElemento tiene un atributo data-idtrabajo y data-idshopify
      const idTrabajo = btnElemento.getAttribute('data-idtrabajo');
      const idShopify = btnElemento.getAttribute('data-idshopify');

      {% comment %} const cantidadSeleccionados = contenedorPadreSeccion.querySelectorAll('.seleccionado').length; {% endcomment %}
      // Si estamos al mínimo, no permitir deseleccionarr

      // Son los elementos subRama sus productos del elemento seleccionado actual que es de una rama principal
      let elementosTrabajo = null;

      this.productoSeleccionadoRamaPrincipal.ramas.forEach((objetoDetalle)=>{
        if (objetoDetalle.codigo == codigo) {
            elementosTrabajo =objetoDetalle.productos;
        }
      });

      // Se procede a seleccionar el elemento
      btnElemento.classList.toggle('seleccionado');
      btnElemento.querySelector('.pmp-item-simple-escoger').innerHTML = tipoBoton == 'checkbox' ? this.iconos.iconCheckBoxOn : this.iconos.iconEstadoOn;
      cantidadSeleccionados++;

      // Se evalua a sus hermanos
      hermanosBtnElemento.forEach((itemHTML) => {
        const idTrabajo = itemHTML.getAttribute('data-idtrabajo');
        const idShopify = itemHTML.getAttribute('data-idshopify');
        const estaSeleccionado = itemHTML.classList.contains('seleccionado');
        const estaDesactivado = itemHTML.classList.contains('desactivado');
        const itemHTMLPerteneceElementoTrabajo = elementosTrabajo.find((producto) => producto.idShopify == idShopify);

        if(itemHTMLPerteneceElementoTrabajo){
          if(seleccionadoActual >= max){
            itemHTML.classList.add('desactivado');
            itemHTML.querySelector('.pmp-item-simple-escoger').innerHTML = tipoBoton == 'checkbox' ? this.iconos.iconCheckBoxOff : this.iconos.iconEstadoOff;
          }else {
            itemHTML.classList.remove('desactivado');
            itemHTML.classList.remove('seleccionado');
            itemHTML.querySelector('.pmp-item-simple-escoger').innerHTML = tipoBoton == 'checkbox' ? this.iconos.iconCheckBoxOff : this.iconos.iconEstadoOff;
          }
        }else{
          itemHTML.classList.remove('seleccionado');
          itemHTML.classList.add('desactivado');
          itemHTML.querySelector('.pmp-item-simple-escoger').innerHTML = tipoBoton == 'checkbox' ? this.iconos.iconCheckBoxOff : this.iconos.iconEstadoOff;
        }
      });

      // Hay que actualizar el valor de los botones inferiores
    }
  }

  customElements.define('ph-producto', PizzaHutProducto);
</script>
