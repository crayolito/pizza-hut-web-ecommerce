<!-- Hoja de estilos Css -->
{{ 'productos-index.css' | asset_url | stylesheet_tag }}
{{ 'estilos-generales.css' | asset_url | stylesheet_tag }}

{% style %}
  .phpi-general-mobile {
    width: 100%;
    height: max-content;
    display: flex;
    flex-direction: column;
    gap: var(--espaciado-xl);
  }

  .phpi-control-desktop {
    display: none;
  }

  .container-productos-general {
    width: 100%;
    height: max-content;
  }

  /* PRODUCTO ESPECIAL */
  .phpi-producto-especial {
    width: 100%;
    height: max-content;
  }

  @media (min-width: 768px) {
    .phpi-general-mobile {
      display: none;
    }

    .phpi-control-desktop {
      display: grid;
    }
  }
{% endstyle %}

<productos-index>
  <div class="pi-base container-base">
    <section class="pi-titulo">
      <small class="pi-titulo-1">tu pizza favorita</small>
      <small class="pi-titulo-2">¡Te espera!</small>
    </section>
    <section class="phpi-general-productos">
      <!-- APARTADO DESKTOP -->
      <div class="phpi-general-mobile">
        <div id="phpi-sector1-mobile" class="container-productos-general">
          <div class="producto-item">
            <div class="producto-item-imagen">
              <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div
              tipo-producto="simple"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>CHESSY LOVERS</h3>
                <p>
                  Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                  tocino.
                </p>
              </div>
              <h3 class="color-letras-primary">12.56 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="simple"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">Personal</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  <div class="variante-producto-item">
                    <p>Personal</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Super Pers.</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Mediana</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Familiar</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general   phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
          <div class="producto-item">
            <div class="producto-item-imagen">
              <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div
              tipo-producto="simple"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>CHESSY LOVERS</h3>
                <p>
                  Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                  tocino.
                </p>
              </div>
              <h3 class="color-letras-primary">12.56 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="simple"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">Personal</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  <div class="variante-producto-item">
                    <p>Personal</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Super Pers.</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Mediana</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Familiar</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general   phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
        </div>
        <div class="phpi-sector2-mobile" class="phpi-producto-especial">
          <div class="producto-item">
            <div class="producto-item-imagen">
              <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div
              tipo-producto="simple"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>CHESSY LOVERS</h3>
                <p>
                  Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                  tocino.
                </p>
              </div>
              <h3 class="color-letras-primary">12.56 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="simple"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">Personal</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  <div class="variante-producto-item">
                    <p>Personal</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Super Pers.</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Mediana</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Familiar</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general   phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
        </div>
        <div id="phpi-sector3-mobile" class="container-productos-general">
          <div class="producto-item">
            <div class="producto-item-imagen">
              <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div
              tipo-producto="simple"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>CHESSY LOVERS</h3>
                <p>
                  Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                  tocino.
                </p>
              </div>
              <h3 class="color-letras-primary">12.56 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="simple"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">Personal</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  <div class="variante-producto-item">
                    <p>Personal</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Super Pers.</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Mediana</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Familiar</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general   phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
          <div class="producto-item">
            <div class="producto-item-imagen">
              <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div
              tipo-producto="simple"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>CHESSY LOVERS</h3>
                <p>
                  Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                  tocino.
                </p>
              </div>
              <h3 class="color-letras-primary">12.56 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="simple"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">Personal</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  <div class="variante-producto-item">
                    <p>Personal</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Super Pers.</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Mediana</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Familiar</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general   phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
        </div>
      </div>
      <!-- APARTADO MOBIL -->
      <div id="phpi-contenedor-productos-muestra" class="container-productos-general phpi-control-desktop">
        {% comment %}
          <div class="producto-item">
            <div class="producto-item-imagen">
              <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div
              tipo-producto="simple"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>CHESSY LOVERS</h3>
                <p>
                  Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                  tocino.
                </p>
              </div>
              <h3 class="color-letras-primary">12.56 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="simple"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">Personal</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  <div class="variante-producto-item">
                    <p>Personal</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Super Pers.</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Mediana</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Familiar</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general   phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
          <div class="producto-item">
            <div class="producto-item-imagen">
              <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div
              tipo-producto="complejo"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>CHESSY LOVERS</h3>
                <p>
                  Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                  tocino.
                </p>
              </div>
              <h3 class="color-letras-primary">12.56 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="complejo"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">Personal</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  <div class="variante-producto-item">
                    <p>Personal</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Super Pers.</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Mediana</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Familiar</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general   phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
          <div class="producto-item">
            <div class="producto-item-imagen">
              <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div
              tipo-producto="simple"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>CHESSY LOVERS</h3>
                <p>
                  Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                  tocino.
                </p>
              </div>
              <h3 class="color-letras-primary">12.56 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="simple"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">Personal</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  <div class="variante-producto-item">
                    <p>Personal</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Super Pers.</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Mediana</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Familiar</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general   phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
          <div class="producto-item">
            <div class="producto-item-imagen">
              <img src="{{ 'imagen-pizza-1.png' | asset_url }}" alt="Pizza 1" width="100%" height="100%">
            </div>
            <div
              tipo-producto="complejo"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>CHESSY LOVERS</h3>
                <p>
                  Salsa de tomate, queso mozarella, Pepperoni, Jamón, carnes mixtas (res y cerdo, salchicha italiana y
                  tocino.
                </p>
              </div>
              <h3 class="color-letras-primary">12.56 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="complejo"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">Personal</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  <div class="variante-producto-item">
                    <p>Personal</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Super Pers.</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Mediana</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                  <div class="variante-producto-item">
                    <p>Familiar</p>
                    <p class="color-letras-primary">12.56 BS</p>
                  </div>
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general   phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
        {% endcomment %}
      </div>
    </section>
  </div>
</productos-index>

<script>
  class ProductosIndex extends HTMLElement {
    constructor() {
      super();
      this.accesoX="shpat_";
      this.accesoY="45f4a7476152f4881d058f87ce063698";
      this.urlConsulta = "https://pizza-hut-bo.myshopify.com/admin/api/2025-01/graphql.json";
    }

    connectedCallback() {
      // REFERENCIAS ELEMENTOS
      this.traerInformacionShopify();
      document.addEventListener('click', this.clicksEspeciales.bind(this));
    }

    inicializarEventos() {
      // REFERENCIAS ELEMENTOS
      this.contenedorVarianteSeleccionado = this.querySelectorAll('#phpi-view-variantes');
      this.contenedorVariantes = this.querySelectorAll('#phpi-items-variantes');
      this.varianteElemento = this.querySelectorAll('.variante-producto-item');
      this.btnsPersonalizar = this.querySelectorAll('#phpi-btn-personalizar');
      
      // EVENTOS INICIALIZAR
      this.contenedorVarianteSeleccionado.forEach((elementoBase) => {
        elementoBase.addEventListener('click', this.mostrarYOcultarContenedorVariantes.bind(this, elementoBase));
      });
      
      this.btnsPersonalizar.forEach((elementoBtnPersonalizar) => {
        elementoBtnPersonalizar.addEventListener(
          'click',
          this.redireccionPersonalizar.bind(this, elementoBtnPersonalizar)
        );
      });
      
      this.varianteElemento.forEach((elementoBase) => {
        elementoBase.addEventListener('click', this.procesoVarianteSeleccionada.bind(this, elementoBase));
      });
      
      // INICIALIZAR ELEMENTOS Y PROCESOS CLAVES
      this.contenedorVariantes.forEach((elementoBase) => {
        elementoBase.classList.add('elemento-oculto');
      });
    }

    mostrarYOcultarContenedorVariantes(elementoBase) {
      // Busco al elemento Padre
      const elementoPadre = elementoBase.closest('#phpi-general-variantes');
      // Busco a su hermano
      const hermano = elementoPadre.querySelector('#phpi-items-variantes');

      const estaVisible = hermano.classList.contains('elemento-visible');

      if(estaVisible) {
        hermano.classList.remove('elemento-visible');
        hermano.classList.add('elemento-oculto');
      } else {
        hermano.classList.remove('elemento-oculto');
        hermano.classList.add('elemento-visible');
      }

      // Oculto a los otros elementos
      this.contenedorVariantes.forEach((elemento) => {
        if (elemento !== hermano) {
          elemento.classList.remove('elemento-visible');
          elemento.classList.add('elemento-oculto');
          {% comment %} elemento.style.display = "none"; {% endcomment %}
        }
      });
    }

    async traerInformacionShopify() {
      // Primero va traer la informacion de la coleccion PIZZA
      const {informacionColeccion, productosColeccion } = await this.primeraFaseConsulta();

      const estructuraClasicas = informacionColeccion.estructura.clasica.estructura;  
      const { coleccionPCE, coleccionPCMB, coleccionPCT} = await this.segundaFaseConsulta(estructuraClasicas); 

      var productosEstructurado = [];
      var tamanosC = [];
      var extrasC = [];
      var bordesMasasC = [];

      productosColeccion.forEach((productoPrimario) => {
        var tamanos = {
          condicion : {
            min : productoPrimario.estructura.tamano.min || 0,
            max : productoPrimario.estructura.tamano.max || 0
          },
          productos : []
        };
        
        // Coleccion de Tamañoss
        coleccionPCT.forEach((productoSecundario) => {

          var extras = null;
          var bordesMasas = null;

          if(productoSecundario.estructura.masaborde){
            bordesMasas = {
              condicion: {
                min: productoSecundario.estructura?.masaborde?.min || 0,
                max: productoSecundario.estructura?.masaborde?.max || 0
              },
              productos: []
            };

            // Coleccion Bordes y Masa
            coleccionPCMB.forEach((producto) =>{
              var traerObjetoTrabajo = null;
              if (productoSecundario.titulo.includes("Super personal")){
                traerObjetoTrabajo = producto.estructura.SuperPersonal;
              }
            
              if (productoSecundario.titulo.includes("Mediana")){
                traerObjetoTrabajo = producto.estructura.Mediana;
              }

              if (productoSecundario.titulo.includes("Familiar")){
                traerObjetoTrabajo = producto.estructura.Familiar;
              }

              if(!traerObjetoTrabajo){
                return;
              }

              const productoTrabajo = {
                idShopfiy: producto.id,
                idTrabajo : traerObjetoTrabajo.id,
                handle: producto.handle,
                precio: traerObjetoTrabajo.precio,
              }

              bordesMasas.productos.push(productoTrabajo)
            });
          }

          if(productoSecundario.estructura.extras){
            extras = {
                condicion: {
                  min: productoSecundario.estructura?.extra?.min || 0,
                  max: productoSecundario.estructura?.extra?.max || 0
                },
                productos: []
              };



            // Coleccion Extras
            coleccionPCE.forEach((producto) =>{
              var traerObjetoTrabajo = null;
              if (productoSecundario.titulo.includes("Super personal")){
                traerObjetoTrabajo = producto.estructura.SuperPersonal;
              }
    
              if (productoSecundario.titulo.includes("Mediana")){
                traerObjetoTrabajo = producto.estructura.Mediana;
              }
                        
              if (productoSecundario.titulo.includes("Familiar")){
                traerObjetoTrabajo = producto.estructura.Familiar;
              }

              if(!traerObjetoTrabajo){
                return;
              }

              const productoTrabajo = {
                idShopfiy: producto.id,
                idTrabajo : traerObjetoTrabajo.id,
                handle: producto.handle,
                precio: traerObjetoTrabajo.precio,
              }
              extras.productos.push(productoTrabajo);
            });
          }
          
          const productoTamano = {
              idShopify: productoSecundario.id,
              idTrabajo: productoSecundario.estructura.id,
              titulo: productoSecundario.titulo,
              precio: productoSecundario.estructura.precio,
              extras,
              bordesMasas,
              contruccion: {
                tamanosC,
                extrasC,
                bordesMasasC
              }
          }

          tamanos.productos.push(productoTamano);
        });

        const nuevoProducto = { 
          idShopify: productoPrimario.id,
          idTrabajo: productoPrimario.estructura.id,
          titulo: productoPrimario.titulo,
          handle : productoPrimario.handle,
          precio: productoPrimario.estructura.precio,
          imagen : productoPrimario.imagen,
          descripcion : productoPrimario.descripcion,
          tamanos
        }
        productosEstructurado.push(nuevoProducto);
      });

      console.log("Productos Finales trabajados:",productosEstructurado);

      // Contruccion del productos en su estado visible en la seccion
      const contenedorProductos = this.querySelector('#phpi-contenedor-productos-muestra');
       var contenidoHTML = ``;
       
       const acortarTitulo = (titulo) => {
        if (titulo.includes("Super personal")) {
          return "Super Pers.";
        } else if (titulo.includes("Mediana")) {
          return "Mediana";
        } else if (titulo.includes("Familiar")) {
          return "Familiar";
        } else if (titulo.includes("Personal")) {
          return "Personal";
        } else {
          return titulo;
        }
      };


      productosEstructurado.forEach((producto) => {
        var variantesHTML = ``;
        let elementoSeleccionado; 

        producto.tamanos.productos.reverse().forEach((productoTamano, index) => {
          // Función para acortar el título


          // Determinamos si este elemento está seleccionado (solo el primero
          const esSeleccionado = index === 0 ? "seleccionado" : "";
          
          // Si es el primer elemento, lo guardamos en la variable
          if (index === 0) {
            elementoSeleccionado = productoTamano;
            {% comment %} console.log("Elemento seleccionado:", elementoSeleccionado); {% endcomment %}
          }

          // Acortamos el título
          const tituloCorto = acortarTitulo(productoTamano.titulo || productoTamano.nombre);
          
          // Agregamos el HTML con la clase de seleccionado para el primer elemento
          variantesHTML += `
            <div 
            data-id="${productoTamano.idTrabajo}"
            class="variante-producto-item ${esSeleccionado}">
              <p>${tituloCorto}</p>
              <p class="color-letras-primary">${(productoTamano.precio !== undefined && productoTamano.precio !== null && productoTamano.precio !== "") ? productoTamano.precio + ".00 BS" : ""}</p>
            </div>
          `;
        });

        contenidoHTML += `
          <div 
          data-id="${producto.idTrabajo}"
          data-seleccionado="${elementoSeleccionado.idShopify}"
          class="producto-item">
            <div class="producto-item-imagen">
              <img src="${producto.imagen}" alt="${producto.titulo}" width="100%" height="100%">
            </div>
            <div
              tipo-producto="simple"
              class="producto-item-detalle"
            >
              <div class="producto-item-info">
                <h3>${producto.titulo}</h3>
                <p>${producto.descripcion}</p>
              </div>
              <h3 class="color-letras-primary">${producto.precio}.00 BS</h3>
              <div
                id="phpi-general-variantes"
                tipo-producto="simple"
                class="seleccion-variante-producto-general"
              >
                <p>Tamaño</p>
                <button 
                   id="phpi-view-variantes" class="container-info-variante">
                  <p id="phpi-variante-seleccionado">${acortarTitulo(elementoSeleccionado.titulo)}</p>
                  <div class="icono-dropdown-variantes icon-color-tertiary">
                    {% render 'icon-flecha-abajo' %}
                  </div>
                </button>
                <div id="phpi-items-variantes" class="variantes-producto">
                  ${variantesHTML}
                </div>
              </div>
              <button id="phpi-btn-personalizar" class="ph-btn-general  phpi-btn-personalizar">
                <p class="color-letras-secondary">PERSONALIZAR</p>
              </button>
            </div>
          </div>
        `;
      });

      contenedorProductos.innerHTML = contenidoHTML;
      this.inicializarEventos();
      
    }
    
    async segundaFaseConsulta(codigosColeccion = ["PCT", "PCE", "PCMB"]) {
      // Validar que codigosColeccion sea un array
      if (!Array.isArray(codigosColeccion) || codigosColeccion.length === 0) {
        console.error("Error: codigosColeccion debe ser un array con al menos un elemento");
        return {};
      }
    
      // Construir dinámicamente las partes del query para cada colección
      const coleccionesQueries = codigosColeccion.map((codigo, index) => {
        // Crear un alias único para cada colección basado en su código
        const aliasSeguro = `${codigo.toLowerCase()}Collection`;
        
        return `
          ${aliasSeguro}: collections(first: 1, query: "title:${codigo}") {
            edges {
              node {
                id
                title
                handle
                products(first: 50) {
                  edges {
                    node {
                      id
                      title
                      handle
                      description
                      tags
                      images(first: 1) {
                        edges {
                          node {
                            url
                          }
                        }
                      }
                      metafield(namespace: "estructura", key: "json") {
                        value
                      }
                    }
                  }
                }
              }
            }
          }
        `;
      }).join('\n');
    
      // Construir el query completo con todas las colecciones
      const graphQLQuery = `
        query GetProductsFromSpecificCollections {
          ${coleccionesQueries}
        }
      `;
    
      try {
        // Realiza la solicitud a la API de Shopify
        const myTest = 'shpat_' + '45f4a7476152f4881d058f87ce063698';
        const respuesta = await fetch(this.urlConsulta, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-Shopify-Access-Token': myTest,
          },
          body: JSON.stringify({ query: graphQLQuery }),
        });
    
        if (!respuesta.ok) {
          throw new Error(`Error de red: ${respuesta.status} ${respuesta.statusText}`);
        }
    
        // Obtener los datos de la respuesta
        const datosRespuesta = await respuesta.json();
        
        // Verificar si hay errores en la respuesta de GraphQL
        if (datosRespuesta.errors) {
          console.error("Errores en la consulta GraphQL:", datosRespuesta.errors);
          throw new Error("Error en la consulta GraphQL");
        }
        
        // Función para procesar los datos de una colección
        const procesarProductosColeccion = (coleccion) => {
          // Verificar si la colección existe y tiene edges
          if (!coleccion || !coleccion.edges || coleccion.edges.length === 0) {
            return [];
          }
          
          const nodoColeccion = coleccion.edges[0].node;
          
          // Verificar si hay productos
          if (!nodoColeccion.products || !nodoColeccion.products.edges) {
            return [];
          }
          
          // Procesar productos
          return nodoColeccion.products.edges.map(edge => {
            const producto = edge.node;
            const imagenURL = producto.images && producto.images.edges && producto.images.edges.length > 0 
              ? producto.images.edges[0].node.url 
              : '';
            
            // Procesar el metafield de estructura
            let estructura = {};
            if (producto.metafield && producto.metafield.value) {
              try {
                estructura = JSON.parse(producto.metafield.value);
              } catch (e) {
                console.error(`Error al parsear estructura para ${producto.title}:`, e);
              }
            }
            
            return {
              id: producto.id,
              titulo: producto.title,
              handle: producto.handle,
              descripcion: producto.description,
              tags: producto.tags || [],
              imagen: imagenURL,
              estructura: estructura
            };
          });
        };
        
        // Crear el objeto de resultado con propiedades para cada colección
        const resultado = {};
        
        // Mapear los códigos de colección a los alias usados en el query
        codigosColeccion.forEach(codigo => {
          const aliasQuery = `${codigo.toLowerCase()}Collection`;
          const nombrePropiedad = `coleccion${codigo}`;
          
          // Verificar si existe la respuesta para este alias
          if (datosRespuesta.data && datosRespuesta.data[aliasQuery]) {
            resultado[nombrePropiedad] = procesarProductosColeccion(datosRespuesta.data[aliasQuery]);
          } else {
            // Si no hay datos para esta colección, guardar un array vacío
            resultado[nombrePropiedad] = [];
          }
        });
        
        console.log('Datos de colecciones obtenidos');
        
        return resultado;
      } catch (error) {
        console.error('Error al obtener datos de las colecciones específicas:', error);
        
        // Crear un objeto vacío con las propiedades esperadas
        const resultado = {};
        codigosColeccion.forEach(codigo => {
          resultado[`coleccion${codigo}`] = [];
        });
        
        return resultado;
      }
    }
    
    async primeraFaseConsulta() {
      const graphQLQuery = `
        query GetCollectionByFlexibleTitle {
          collections(first: 1, query: "title:*PIZZA*") {
            edges {
              node {
                id
                title
                handle
                metafields(first: 10, namespace: "estructura") {
                  edges {
                    node {
                      key
                      value
                    }
                  }
                }
                products(first: 20) {
                  edges {
                    node {
                      id
                      title
                      handle
                      description
                      images(first: 1) {
                        edges {
                          node {
                            url
                          }
                        }
                      }
                      metafield(namespace: "estructura", key: "json") {
                        value
                      }
                    }
                  }
                }
              }
            }
          }
        }
      `;
    
      try {
        // Realiza la solicitud a la API de Shopify
        const myTest = 'shpat_' + '45f4a7476152f4881d058f87ce063698';
        const respuesta = await fetch(this.urlConsulta, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-Shopify-Access-Token': myTest,
          },
          body: JSON.stringify({ query: graphQLQuery }),
        });
    
        if (!respuesta.ok) {
          throw new Error(`Error de red: ${respuesta.status} ${respuesta.statusText}`);
        }
    
        // Obtener los datos de la respuesta
        const datosRespuesta = await respuesta.json();
    
        // Verificar si tenemos datos
        if (!datosRespuesta.data || !datosRespuesta.data.collections.edges.length || !datosRespuesta.data.collections.edges[0].node.products.edges.length) {
          console.log("No se encontraron productos en la colección PIZZA");
          return [];
        }
    
        // Extraer la información de la colección 
        const coleccion = datosRespuesta.data.collections.edges[0].node;
        
        // Procesar los metafields de la colección
        const estructuraColeccion = {};
        if (coleccion.metafields && coleccion.metafields.edges) {
          coleccion.metafields.edges.forEach(edge => {
            if (edge.node && edge.node.key && edge.node.value) {
              try {
                estructuraColeccion[edge.node.key] = JSON.parse(edge.node.value);
              } catch (e) {
                estructuraColeccion[edge.node.key] = edge.node.value;
              }
            }
          });
        }
    
        // Transformar los productos a un formato más simple
        const productosSimplificados = coleccion.products.edges.map(edge => {
          const producto = edge.node;
          const imagenURL = producto.images.edges.length > 0 ? producto.images.edges[0].node.url : '';
    
          // Crear un objeto simplificado del producto
          const productoSimplificado = {
            id: producto.id,
            titulo: producto.title,
            handle: producto.handle,
            descripcion: producto.description,
            imagen: imagenURL,
            estructura: producto.metafield ? JSON.parse(producto.metafield.value) : "",
          };
    
          return productoSimplificado;
        });
    
        // Crear un objeto con información de la colección y los productos
        const resultado = {
          informacionColeccion: {
            id: coleccion.id,
            titulo: coleccion.title,
            handle: coleccion.handle,
            estructura: estructuraColeccion
          },
          productosColeccion: productosSimplificados
        };
    
        // Mostrar el resultado en la consola
        {% comment %} console.log('Data no procesada: ', resultado);
        console.log('Data procesada: ', productosSimplificados); {% endcomment %}
    
        return resultado;
    
      } catch (error) {
        // Errores al traer los datos
        console.error('Error al obtener los datos de la colección:', error);
        return [];
      }
    }

    clicksEspeciales(event){
      // Si el click es en algun elemento con id="phpi-view-variantes" no hace nada y se sale
      let clickEnContenedorVariante = false;
      this.contenedorVarianteSeleccionado.forEach((elementoBase) => {
        if (elementoBase.contains(event.target)) {
          clickEnContenedorVariante = true;
        }
      });

      if (clickEnContenedorVariante) {
        return;
      }

      // Si el elemento clickeado no es en el contenedor id="phpi-items-variantes" tons cierra a todos
      this.contenedorVariantes.forEach((elementoBase) => {
        if (!elementoBase.contains(event.target)) {
          {% comment %} elementoBase.style.display = "none"; // Oculto {% endcomment %}
           elementoBase.classList.remove('elemento-visible');
           elementoBase.classList.add('elemento-oculto');
        }
      });
    }

    redireccionPersonalizar(elementoBtn){
      const padreElemento = elementoBtn.closest('.producto-es-item-detalle') || elementoBtn.closest('.producto-item-detalle');

      const dataPadre = padreElemento.getAttribute('tipo-producto');

      if(dataPadre == null){
        window.location.href = "/";
      }

      localStorage.setItem('phpp-tipo-producto', dataPadre);
      window.location.href = "/pages/producto";
    }

    procesoVarianteSeleccionada(elementoBase){
      // Es el que tiene la class="producto-item"
      const elementoPadreGeneral = elementoBase.closest('.producto-item');
      // Busco dentro del elemento al la primer etiqueta <p> y obtengo su valor ya que tenog 3 etiqueta p
      const primerP = elementoBase.querySelectorAll('p')[0];
      // Busco al elemento Padre General con id="phpi-general-variantes"
      const padreGeneral = elementoBase.closest('#phpi-general-variantes');
      // Busco al hijo de Padre con id="phpi-view-variantes"
      const hijo = padreGeneral.querySelector('#phpi-view-variantes');
      // El hijo tiene otro hijo que es una etiqueta p con id="phpi-variante-seleccionado"
      const hijoP = hijo.querySelector('#phpi-variante-seleccionado');
      hijoP.innerHTML = primerP.innerHTML; // Cambiamos el valor de la etiqueta p

      // Se edita el valor del atributo data-seleccionado del padre general
      elementoPadreGeneral.dataset.seleccionado = elementoBase.dataset.id;

      // Se procede a agregar clase seleccionado a elementoBase y se lo quita a los demas si es que lo llevan
      const hermanos = elementoPadreGeneral.querySelectorAll('.variante-producto-item');
      hermanos.forEach((hermano) => {
        if (hermano !== elementoBase) {
          hermano.classList.remove('seleccionado');
        } else {
          hermano.classList.add('seleccionado');
        }
      });

      // Busco al elemento Padre id="phpi-items-variantes"
      // O tambien cierro a todos con ese id
      this.contenedorVariantes.forEach((elementoBase) => {
        if (elementoBase !== padreGeneral) {
          {% comment %} elementoBase.style.display = "none"; {% endcomment %}
          elementoBase.classList.remove('elemento-visible');
          elementoBase.classList.add('elemento-oculto');
        }
      });
    }
  }

  customElements.define('productos-index', ProductosIndex);
</script>

{% schema %}
{
  "name": "Productos Principales",
  "tag": "section",
  "class": "productos-index",
  "settings": [],
  "blocks": []
}
{% endschema %}
