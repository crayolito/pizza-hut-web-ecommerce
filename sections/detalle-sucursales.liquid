<!-- Hoja de estilos Css -->
{{ 'detalle-sucursales.css' | asset_url | stylesheet_tag }}

<sucursales-informacion>
  <div class="container-base ds-contenedor-base">
    <div class="ds-contenedor-left">
      <img
        class="ds-fondo-detalle-sucursales"
        src="{{ 'fondo-detalle-sucursales.png' | asset_url }}"
        width="100%"
        height="100%"
      >
      <img
        class="ds-image-sucursales-aux"
        src="{{ 'image-sucursales-aux.png' | asset_url }}"
        width="100%"
        height="100%"
      >
      <div class="ds-informacion-seleccion">
        <small>Encuentra tu sucursal más cercana</small>
        <div class="ds-info">
          <h3>Selecciona tu ciudad</h3>
          <div class="ds-select-info">
            <h3>Santa Cruz</h3>
            {% render 'icon-flecha-abajo' %}
          </div>
        </div>
        <div class="ds-info">
          <h3>Selecciona tu ciudad</h3>
          <div class="ds-select-info">
            <h3>ENVÍO A DOMICILIO</h3>
            {% render 'icon-flecha-abajo' %}
          </div>
        </div>
      </div>
    </div>
    <div class="ds-contenedor-right">
      <div class="ds-rl-local ">
        <div class="ds-titulos">
          <h3>sANTA CRUZ</h3>
          <h3 style="color: #C8102E;">las palmas</h3>
        </div>
        <div class="ds-rl-disponibilidad">
          <div class="ds-rl-disponibilidad-info ds-abierto">
            {% render 'icon-disponibilidad' %}
            <p>ABIERTO</p>
          </div>
        </div>
        <div class="ds-rl-info-local ">
          <div class="ds-rl-info-local-item">
            {% render 'icon-location-on' %}
            <p>Doble vía a La Guardia</p>
          </div>
          <div class="ds-rl-info-local-item">
            {% render 'icon-headser-mic' %}
            <p>78452415</p>
          </div>
          <div class="ds-rl-info-local-item">
            {% render 'icon-clock' %}
            <p>Abre a las 11:00 AM</p>
          </div>
          <div class="ds-rl-info-servicios">
            <div class="ds-rl-info-servicio">
              {% render 'icon-check' %}
              <p>Envío a domicilio</p>
            </div>
            <div class="ds-rl-info-servicio">
              {% render 'icon-check' %}
              <p>Recoger en local</p>
            </div>
          </div>
        </div>
        <button class="ds-rl-boton ds-rl-ubicacion">
          <p>Abrir ubicación en mapa</p>
          {% render 'icon-map' %}
        </button>
      </div>
      <div class="ds-rl-local ">
        <div class="ds-titulos">
          <h3>sANTA CRUZ</h3>
          <h3 style="color: #C8102E;">las palmas</h3>
        </div>
        <div class="ds-rl-disponibilidad">
          <div class="ds-rl-disponibilidad-info ds-cerrado">
            {% render 'icon-disponibilidad' %}
            <p>CERRADO</p>
          </div>
        </div>
        <div class="ds-rl-info-local ">
          <div class="ds-rl-info-local-item">
            {% render 'icon-location-on' %}
            <p>Doble vía a La Guardia</p>
          </div>
          <div class="ds-rl-info-local-item">
            {% render 'icon-headser-mic' %}
            <p>78452415</p>
          </div>
          <div class="ds-rl-info-local-item">
            {% render 'icon-clock' %}
            <p>Abre a las 11:00 AM</p>
          </div>
          <div class="ds-rl-info-servicios">
            <div class="ds-rl-info-servicio">
              {% render 'icon-check' %}
              <p>Envío a domicilio</p>
            </div>
            <div class="ds-rl-info-servicio">
              {% render 'icon-check' %}
              <p>Recoger en local</p>
            </div>
          </div>
        </div>
        <button class="ds-rl-boton ds-rl-ubicacion">
          <p>Abrir ubicación en mapa</p>
          {% render 'icon-map' %}
        </button>
      </div>
    </div>
  </div>
</sucursales-informacion>

<script>
  class SucursalesInformacion extends HTMLElement {
    constructor() {
      super();
      // Datos de ubicaciones de pizzerías
      this.pizzaLocations = [
        {
          lat: -17.757619,
          lng: -63.178738,
          ciudad: 'SANTA CRUZ',
          name: 'BANZER 3ER ANILLO',
          localizacion: 'Tercer Anillo Externo',
          telefono: '78452415',
          dias: 'Lunes a Viernes',
          horario: '8:00 a 23:00',
          horaApertura: 8,
          horaCierre: 23,
          servicios: ['Envío a domicilio', 'Recoger en local'],
        },
        {
          lat: -17.70001,
          lng: -63.160219,
          ciudad: 'SANTA CRUZ',
          name: 'BANZER KM 8.5',
          localizacion: '8R2Q+2XH',
          telefono: '78452415',
          dias: 'Lunes a Viernes',
          horario: '8:00 a 23:00',
          horaApertura: 8,
          horaCierre: 23,
          servicios: ['Envío a domicilio', 'Recoger en local'],
        },
        {
          lat: -17.807739,
          lng: -63.204363,
          ciudad: 'SANTA CRUZ',
          name: 'LAS PALMAS',
          localizacion: 'Doble vía La Guardia',
          telefono: '78452415',
          dias: 'Lunes a Viernes',
          horario: '8:00 a 23:00',
          horaApertura: 8,
          horaCierre: 23,
          servicios: ['Envío a domicilio', 'Recoger en local'],
        },
        {
          lat: -17.758879,
          lng: -63.19948,
          ciudad: 'SANTA CRUZ',
          name: 'SAN MARTIN',
          localizacion: 'Av. San Martin 2200',
          telefono: '78452415',
          dias: 'Lunes a Viernes',
          horario: '8:00 a 23:00',
          horaApertura: 8,
          horaCierre: 23,
          servicios: ['Envío a domicilio', 'Recoger en local'],
        },
        {
          lat: -17.820341,
          lng: -63.184337,
          ciudad: 'SANTA CRUZ',
          name: 'SANTOS DUMONT',
          localizacion: 'Av Santos Dumont 3228',
          telefono: '78452415',
          dias: 'Lunes a Viernes',
          horario: '8:00 a 23:00',
          horaApertura: 8,
          horaCierre: 23,
          servicios: ['Envío a domicilio', 'Recoger en local'],
        },
      ];

      // Obtener ciudades únicas
      this.ciudades = [...new Set(this.pizzaLocations.map((loc) => loc.ciudad))];

      // Tipos de servicio
      this.tiposServicio = ['TODOS', 'ENVÍO A DOMICILIO', 'RECOGER EN LOCAL'];

      // Estado actual de selección
      this.ciudadSeleccionada = this.ciudades[0];
      this.servicioSeleccionado = this.tiposServicio[0];
    }

    connectedCallback() {
      // Inicializar elementos
      this.initSelectors();
      this.updateLocalesVisibles();
      this.setupEventListeners();
    }

    // Inicializa los selectores de ciudad y tipo de servicio
    initSelectors() {
      // Crear selector de ciudades
      const selectorCiudades = this.querySelector('.ds-select-info:nth-child(1) h3');
      if (selectorCiudades) {
        selectorCiudades.textContent = this.ciudadSeleccionada;
      }

      // Crear selector de tipos de servicio
      const selectorServicio = this.querySelector('.ds-select-info:nth-child(2) h3');
      if (selectorServicio) {
        selectorServicio.textContent = this.servicioSeleccionado;
      }
    }

    // Configura los event listeners
    setupEventListeners() {
      // Event listeners para los selectores
      const selectoresCiudad = this.querySelectorAll('.ds-info:nth-child(2) .ds-select-info');
      const selectoresServicio = this.querySelectorAll('.ds-info:nth-child(3) .ds-select-info');

      if (selectoresCiudad.length > 0) {
        selectoresCiudad[0].addEventListener('click', () => this.toggleSelectorCiudad());
      }

      if (selectoresServicio.length > 0) {
        selectoresServicio[0].addEventListener('click', () => this.toggleSelectorServicio());
      }

      // Event listeners para los botones de mapa
      this.setupMapButtons();
    }

    // Configura los botones para abrir el mapa
    setupMapButtons() {
      const botonesUbicacion = this.querySelectorAll('.ds-rl-ubicacion');
      botonesUbicacion.forEach((boton, index) => {
        boton.addEventListener('click', () => {
          const locales = this.getLocalesFiltrados();
          if (index < locales.length) {
            const local = locales[index];
            window.open(`https://www.google.com/maps/search/?api=1&query=${local.lat},${local.lng}`, '_blank');
            console.log('Botón ubicación en mapa presionado: ', local.name);
          }
        });
      });
    }

    // Muestra u oculta el selector de ciudades
    toggleSelectorCiudad() {
      const contenedor = this.querySelector('.ds-info:nth-child(2)');
      if (contenedor) {
        // Si ya existe el dropdown, lo eliminamos
        const dropdownExistente = contenedor.querySelector('.ds-dropdown');
        if (dropdownExistente) {
          dropdownExistente.remove();
          return;
        }

        // Crear dropdown
        const dropdown = document.createElement('div');
        dropdown.className = 'ds-dropdown';

        // Agregar opciones
        this.ciudades.forEach((ciudad) => {
          const opcion = document.createElement('div');
          opcion.className = 'ds-dropdown-item';
          opcion.textContent = ciudad;
          opcion.addEventListener('click', () => {
            this.seleccionarCiudad(ciudad);
            dropdown.remove();
          });
          dropdown.appendChild(opcion);
        });

        contenedor.appendChild(dropdown);
      }
    }

    // Muestra u oculta el selector de tipo de servicio
    toggleSelectorServicio() {
      const contenedor = this.querySelector('.ds-info:nth-child(3)');
      if (contenedor) {
        // Si ya existe el dropdown, lo eliminamos
        const dropdownExistente = contenedor.querySelector('.ds-dropdown');
        if (dropdownExistente) {
          dropdownExistente.remove();
          return;
        }

        // Crear dropdown
        const dropdown = document.createElement('div');
        dropdown.className = 'ds-dropdown';

        // Agregar opciones
        this.tiposServicio.forEach((servicio) => {
          const opcion = document.createElement('div');
          opcion.className = 'ds-dropdown-item';
          opcion.textContent = servicio;
          opcion.addEventListener('click', () => {
            this.seleccionarServicio(servicio);
            dropdown.remove();
          });
          dropdown.appendChild(opcion);
        });

        contenedor.appendChild(dropdown);
      }
    }

    // Actualiza la ciudad seleccionada
    seleccionarCiudad(ciudad) {
      this.ciudadSeleccionada = ciudad;
      const selectorCiudades = this.querySelector('.ds-select-info:nth-child(1) h3');
      if (selectorCiudades) {
        selectorCiudades.textContent = ciudad;
      }
      this.updateLocalesVisibles();
    }

    // Actualiza el tipo de servicio seleccionado
    seleccionarServicio(servicio) {
      this.servicioSeleccionado = servicio;
      const selectorServicio = this.querySelector('.ds-select-info:nth-child(2) h3');
      if (selectorServicio) {
        selectorServicio.textContent = servicio;
      }
      this.updateLocalesVisibles();
    }

    // Obtiene los locales filtrados según la selección actual
    getLocalesFiltrados() {
      let localesFiltrados = this.pizzaLocations.filter((local) => local.ciudad === this.ciudadSeleccionada);

      // Filtrar por servicio si no es "TODOS"
      if (this.servicioSeleccionado !== 'TODOS') {
        const servicioNormalizado = this.servicioSeleccionado.toLowerCase();
        localesFiltrados = localesFiltrados.filter((local) =>
          local.servicios.some((serv) => serv.toLowerCase() === servicioNormalizado)
        );
      }

      return localesFiltrados;
    }

    // Verifica si un local está abierto según la hora actual
    estaLocalAbierto(local) {
      const ahora = new Date();
      const horaActual = ahora.getHours();
      const diaActual = ahora.getDay();

      // Verificar si hoy está abierto (de lunes a viernes)
      // 0 = domingo, 1 = lunes, 5 = viernes
      const esDiaLaboral = diaActual >= 1 && diaActual <= 5;

      if (!esDiaLaboral) {
        return false;
      }

      // Verificar horario
      return horaActual >= local.horaApertura && horaActual < local.horaCierre;
    }

    // Actualiza la visualización de locales según los filtros actuales
    updateLocalesVisibles() {
      const contenedorRight = this.querySelector('.ds-contenedor-right');
      if (!contenedorRight) return;

      // Limpiar contenedor
      contenedorRight.innerHTML = '';

      // Obtener locales filtrados
      const localesFiltrados = this.getLocalesFiltrados();

      // Generar HTML para cada local
      localesFiltrados.forEach((local) => {
        const estaAbierto = this.estaLocalAbierto(local);
        const claseDisponibilidad = estaAbierto ? 'ds-abierto' : 'ds-cerrado';
        const textoDisponibilidad = estaAbierto ? 'ABIERTO' : 'CERRADO';
        const textoHorario = estaAbierto
          ? `Abierto hasta las ${local.horaCierre}:00`
          : `Abre a las ${local.horaApertura}:00`;

        const localHTML = `
          <div class="ds-rl-local">
            <div class="ds-titulos">
              <h3>${local.ciudad}</h3>
              <h3 style="color: #C8102E;">${local.name}</h3>
            </div>
            <div class="ds-rl-disponibilidad">
              <div class="ds-rl-disponibilidad-info ${claseDisponibilidad}">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="12" cy="12" r="10" fill="currentColor"/>
                </svg>
                <p>${textoDisponibilidad}</p>
              </div>
            </div>
            <div class="ds-rl-info-local">
              <div class="ds-rl-info-local-item">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z" fill="currentColor"/>
                </svg>
                <p>${local.localizacion}</p>
              </div>
              <div class="ds-rl-info-local-item">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 1c-4.97 0-9 4.03-9 9v7c0 1.66 1.34 3 3 3h3v-8H5v-2c0-3.87 3.13-7 7-7s7 3.13 7 7v2h-4v8h3c1.66 0 3-1.34 3-3v-7c0-4.97-4.03-9-9-9z" fill="currentColor"/>
                </svg>
                <p>${local.telefono}</p>
              </div>
              <div class="ds-rl-info-local-item">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z" fill="currentColor"/>
                  <path d="M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z" fill="currentColor"/>
                </svg>
                <p>${textoHorario}</p>
              </div>
              <div class="ds-rl-info-servicios">
                ${local.servicios
                  .map(
                    (servicio) => `
                  <div class="ds-rl-info-servicio">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z" fill="currentColor"/>
                    </svg>
                    <p>${servicio}</p>
                  </div>
                `
                  )
                  .join('')}
              </div>
            </div>
            <button class="ds-rl-boton ds-rl-ubicacion">
              <p>Abrir ubicación en mapa</p>
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM15 19l-6-2.11V5l6 2.11V19z" fill="currentColor"/>
              </svg>
            </button>
          </div>
        `;

        // Agregar al contenedor
        contenedorRight.innerHTML += localHTML;
      });

      // Reiniciar event listeners para los botones de mapa
      this.setupMapButtons();
    }
  }

  // Registrar el elemento personalizado
  customElements.define('sucursales-informacion', SucursalesInformacion);
</script>

<style>
  .ds-dropdown {
    position: absolute;
    background: white;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    width: 100%;
    max-height: 200px;
    overflow-y: auto;
    margin-top: 5px;
  }

  .ds-dropdown-item {
    padding: 10px 15px;
    cursor: pointer;
    transition: background 0.2s;
  }

  .ds-dropdown-item:hover {
    background: #f5f5f5;
  }

  .ds-select-info {
    cursor: pointer;
  }
</style>

{% schema %}
{
  "name": "Detalle de sucursales",
  "tag": "section",
  "class": "detalle-sucursales",
  "settings": [],
  "blocks": []
}
{% endschema %}
